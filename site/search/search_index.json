{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The most efficient platform for the token economy The blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201990s, with pioneers and dreamers coming together to build a new future. The objective of XinFin Network is to become a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture, allowing for fast, frictionless payment and a secure, decentralised, and trusted store of value. XinFin Network aims to be a public EVM-compatible blockchain with the following advantages: low transaction fee, fast confirmation time, double validation and randomization for security guarantees. XinFin Network envisions an ecosystem of different DApps running on the XinFin Network Blockchain infrastructure. In particular, we propose a solution for solving the transaction processing performance bottleneck in Ethereum which hinders its adoption into industries, especially finance. More specifically, we are constructing an efficient and secured consensus protocol, which tackles the following main bottlenecks of classic blockchains: Efficiency: The small throughput of Bitcoin and Ethereum severely hinders a widespread adoption of such crypto- currencies. Confirmation times: Bitcoin takes on average 1 hour to confirm a transaction because the confirmation of a Bitcoin block requires 5 subsequent blocks created following it. While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes. These long confirmation times hinder many important applications (especially smart contract applications). Fork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks. In the newly published technical paper, XinFin Network proposes the XinFin Delegated Proof-of-Stake (XDPoS) consensus, which is a PoS-based blockchain protocol. The consensus has the following key novelties: Double Validation to strengthen security and reduce fork Randomization to guarantee the fair and prevent handshaking attack Fast confirmation time and efficient checkpoints for finality or rebase","title":"Introduction"},{"location":"Community/support/","text":"Welcome, The communities and posts below include content that has been curated by XinFin team members, community members and projects building on XinFin Platform. While some of these links include information specific to these projects, every resource also has information that can be generally applied to the Platform. We welcome Community to \u201dEDIT\u201d and simplify the content by adding more Tools, Article, Video, Plug and Play Scripts, and documentation to make it more simple and friendly for the developer community to build more DApps on XinFin Platform. Developer Specific Communities: Topic: Public discussions on the technical issues, post articles and request for Enhancements and Technical Contributions Slack Public Chat , Telegram Chat , Forum , GitHub General Communities: Topic: Public discussions on general topics, post articles and Request for Enhancement and General Contributions Twitter , Facebook , Reddit , Medium , Linkedin , Meetup , YouTube","title":"Community"},{"location":"Requirement/req/","text":"\ufeff On-Chain Governance for XinFin DPOS \u00b6 On-Chain Governance for XinFin DPOS Overview Built-in Public governance mechanism where any changes in network (update_proposal) will get approved by 2/3 of register_validator (Master-node holder) by voting_system to incorporate those changes in network. Product Perspective On-chain governance (by calling proxy contract ?), a formalized way in which a group of people can make changes by voting through the protocol,The purpose behind it is to provide a clear-cut path to consensus. update_proposal: Any entity that register as masternode is able to vote on update_proposal with proposed vote_period vote_type: Identity-based 1-register_validator (Masternode) = 1-vote vote_period: between 15-90 days vote_condition: more then 1/10 register_validator should participate to vote otherwise update_proposal should be void. How it Works? \u00b6 On-chain governance systems solely work online. Changes to a blockchain are proposed through code updates. Subsequently, nodes can vote to accept or decline the change. all nodes have equal voting power. If the change is accepted by \u2154 validator_node, it is included in the blockchain and baselined. In some instances of on-chain governance implementation, the updated code may be rolled back to its version before a baseline, if the proposed change is unsuccessful. Pre-defined Update: \u00b6 Update the block time Update with vote_period Update with vote_type Update with vote_condition Update the WITHDRAWAL_PERIOD Update with MAX_REGISTERED_VALIDATORS Reduce VALIDATOR_REWARD Update with REWARDS_TRANSFER period Update/Upgrade Smart contract address Update MIN_STAKE Update WITHDRAWAL_PERIOD Update function reportMalicious Time Based limitation to add any changes in network Changes in the existing protocol and parameters of a blockchain. Retroactively make changes to the state of the blockchain. Distribution of subsidies when relevant. Update Hard Coded value: \u00b6 -HashLength -AddressLength -MasternodeVotingSMC -BlockSigners -RandomizeSMC -FoudationAddr -TeamAddr -VoteMethod -UnvoteMethod -ProposeMethod -ResignMethod -SignMethod -RewardMasterPercent -RewardVoterPercent -RewardFoundationPercent -HexSignMethod -HexSetSecret -HexSetOpening -EpocBlockSecret -EpocBlockOpening -EpocBlockRandomize -MaxMasternodes -LimitPenaltyEpoch -BlocksPerYear -LimitThresholdNonceInQueue -DefaultMinGasPrice -MergeSignRange -RangeReturnSigner -MinimunMinerBlockPerEpoch -MinGasPrice Contract State Transfer: Contract state would need to be transferred to the new version of the contract, either through a migration process or a persistent storage pattern. Current TestNet Link: Click here GitHub Code: Click here Smart-Contract Link: Click here Right now, Full node have to upload Valid Self-KYC document (using IPFS) to be a Validator_Node and stake 10Million XDC. Current self KYC Flowchart \u00b6 Smart-Contract code: Click here 2.2. KYC Functions The following list of function descriptions explains the major features of the XDPOS KYC SmartContract. 2.2.1. Function UploadKYC User can upload its kyc documents and this documents will be processed converted into bytes and will be added in a transaction data and finally to a block 2.2.2. Function VoteInvalidKYC This function will be used by the Masternode Candidate who can view the submitted kyc and vote against it 2.2.3. Function getLatestKYC This function will be used to retrieve the latest uploaded kyc of the mentioned user 2.2.4. Function getHashcount This will return the number of count of uploaded kyc. 2.2.5. Function GetAllKYC It will return an array of kyc data submitted by the mentioned user Google Doc: Click here SRS For XDPOS KYC SmartContract (Google Document)","title":"Requirement"},{"location":"Requirement/req/#on-chain-governance-for-xinfin-dpos","text":"On-Chain Governance for XinFin DPOS Overview Built-in Public governance mechanism where any changes in network (update_proposal) will get approved by 2/3 of register_validator (Master-node holder) by voting_system to incorporate those changes in network. Product Perspective On-chain governance (by calling proxy contract ?), a formalized way in which a group of people can make changes by voting through the protocol,The purpose behind it is to provide a clear-cut path to consensus. update_proposal: Any entity that register as masternode is able to vote on update_proposal with proposed vote_period vote_type: Identity-based 1-register_validator (Masternode) = 1-vote vote_period: between 15-90 days vote_condition: more then 1/10 register_validator should participate to vote otherwise update_proposal should be void.","title":"On-Chain Governance for XinFin DPOS"},{"location":"Requirement/req/#how-it-works","text":"On-chain governance systems solely work online. Changes to a blockchain are proposed through code updates. Subsequently, nodes can vote to accept or decline the change. all nodes have equal voting power. If the change is accepted by \u2154 validator_node, it is included in the blockchain and baselined. In some instances of on-chain governance implementation, the updated code may be rolled back to its version before a baseline, if the proposed change is unsuccessful.","title":"How it Works?"},{"location":"Requirement/req/#pre-defined-update","text":"Update the block time Update with vote_period Update with vote_type Update with vote_condition Update the WITHDRAWAL_PERIOD Update with MAX_REGISTERED_VALIDATORS Reduce VALIDATOR_REWARD Update with REWARDS_TRANSFER period Update/Upgrade Smart contract address Update MIN_STAKE Update WITHDRAWAL_PERIOD Update function reportMalicious Time Based limitation to add any changes in network Changes in the existing protocol and parameters of a blockchain. Retroactively make changes to the state of the blockchain. Distribution of subsidies when relevant.","title":"Pre-defined Update:"},{"location":"Requirement/req/#update-hard-coded-value","text":"-HashLength -AddressLength -MasternodeVotingSMC -BlockSigners -RandomizeSMC -FoudationAddr -TeamAddr -VoteMethod -UnvoteMethod -ProposeMethod -ResignMethod -SignMethod -RewardMasterPercent -RewardVoterPercent -RewardFoundationPercent -HexSignMethod -HexSetSecret -HexSetOpening -EpocBlockSecret -EpocBlockOpening -EpocBlockRandomize -MaxMasternodes -LimitPenaltyEpoch -BlocksPerYear -LimitThresholdNonceInQueue -DefaultMinGasPrice -MergeSignRange -RangeReturnSigner -MinimunMinerBlockPerEpoch -MinGasPrice Contract State Transfer: Contract state would need to be transferred to the new version of the contract, either through a migration process or a persistent storage pattern. Current TestNet Link: Click here GitHub Code: Click here Smart-Contract Link: Click here Right now, Full node have to upload Valid Self-KYC document (using IPFS) to be a Validator_Node and stake 10Million XDC.","title":"Update Hard Coded value:"},{"location":"Requirement/req/#current-self-kyc-flowchart","text":"Smart-Contract code: Click here 2.2. KYC Functions The following list of function descriptions explains the major features of the XDPOS KYC SmartContract. 2.2.1. Function UploadKYC User can upload its kyc documents and this documents will be processed converted into bytes and will be added in a transaction data and finally to a block 2.2.2. Function VoteInvalidKYC This function will be used by the Masternode Candidate who can view the submitted kyc and vote against it 2.2.3. Function getLatestKYC This function will be used to retrieve the latest uploaded kyc of the mentioned user 2.2.4. Function getHashcount This will return the number of count of uploaded kyc. 2.2.5. Function GetAllKYC It will return an array of kyc data submitted by the mentioned user Google Doc: Click here SRS For XDPOS KYC SmartContract (Google Document)","title":"Current self KYC Flowchart"},{"location":"XinFinAndWallet/features/","text":"XinFin Android Wallet \u00b6 XDC Mobile Wallet is an easy-to-use, open-source, multiplatform, secure XDC and ERC20 wallet platform for both individuals and companies. XDC Mobile Wallet uses XDC Network for peer synchronization and network interfacing and it provides support to XinFin XDC, XDCt (Apothem Testnet), XDCe (ERC20), Ethereum, USDT Tether, USDC Circle. Download XDC Wallet \u00b6 XDC Wallet Provides : Simple, Secure, Decentralized, Multi-Currency, Cross-Platform, Server-Independent, Open Source. Screenshots of Android Wallet","title":"Features"},{"location":"XinFinAndWallet/features/#xinfin-android-wallet","text":"XDC Mobile Wallet is an easy-to-use, open-source, multiplatform, secure XDC and ERC20 wallet platform for both individuals and companies. XDC Mobile Wallet uses XDC Network for peer synchronization and network interfacing and it provides support to XinFin XDC, XDCt (Apothem Testnet), XDCe (ERC20), Ethereum, USDT Tether, USDC Circle.","title":"XinFin Android Wallet"},{"location":"XinFinAndWallet/features/#download-xdc-wallet","text":"XDC Wallet Provides : Simple, Secure, Decentralized, Multi-Currency, Cross-Platform, Server-Independent, Open Source. Screenshots of Android Wallet","title":"Download XDC Wallet"},{"location":"XinFinWallet/features/","text":"XinFin Original Wallet \u00b6 XinFin Original Wallet is the official decentralized wallet for XDC and XDCE. Create new wallet \u00b6 You can create a new wallet, if you click on \"CREATE NEW WALLET\" after launching the web wallet. You will receive a recovery passphrase consisting of 12 words to restore your wallet in case you lose your password. Access wallet \u00b6 By clicking on \"ACCESS YOUR WALLET\" after launching the webapp, you can choose to import your wallet either with your MEWConnect, Hardware, MetaMask or private key. Select your wallet/private key to access your wallet. Enter your wallet password. Connect to the XinFin Network \u00b6 By selecting a XinFin Network you will able to send and receive XDC tokens. Receive XDC \u00b6 By clicking on \"Adress\" you can either receive XDC by sharing your adress or your QR-code. It's also possible to create a QR-code that requests a certain amount. Send XDC \u00b6 By clicking on \"Send\" you can either send XDC by scanning a QR-code or entering a recipient adress manually.","title":"Features"},{"location":"XinFinWallet/features/#xinfin-original-wallet","text":"XinFin Original Wallet is the official decentralized wallet for XDC and XDCE.","title":"XinFin Original Wallet"},{"location":"XinFinWallet/features/#create-new-wallet","text":"You can create a new wallet, if you click on \"CREATE NEW WALLET\" after launching the web wallet. You will receive a recovery passphrase consisting of 12 words to restore your wallet in case you lose your password.","title":"Create new wallet"},{"location":"XinFinWallet/features/#access-wallet","text":"By clicking on \"ACCESS YOUR WALLET\" after launching the webapp, you can choose to import your wallet either with your MEWConnect, Hardware, MetaMask or private key. Select your wallet/private key to access your wallet. Enter your wallet password.","title":"Access wallet"},{"location":"XinFinWallet/features/#connect-to-the-xinfin-network","text":"By selecting a XinFin Network you will able to send and receive XDC tokens.","title":"Connect to the XinFin Network"},{"location":"XinFinWallet/features/#receive-xdc","text":"By clicking on \"Adress\" you can either receive XDC by sharing your adress or your QR-code. It's also possible to create a QR-code that requests a certain amount.","title":"Receive XDC"},{"location":"XinFinWallet/features/#send-xdc","text":"By clicking on \"Send\" you can either send XDC by scanning a QR-code or entering a recipient adress manually.","title":"Send XDC"},{"location":"general/about/","text":"XinFin Network XinFin.Network","title":"About"},{"location":"general/faq/","text":"Frequently Asked Questions General \u00b6 XinFin Network \u00b6 What is XinFin Network? XinFin Network is an innovative solution to the scalability problem of the Ethereum blockchain, and other current blockchain platforms. XinFin Network relies on a system of 18 Masternodes with XinFin Delegated Proof of stake (XDPOS)consensus that can support low transaction fees and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as double validation, staking via smart-contracts and true randomization processes. XinFin Network supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be continuously researched and incorporated into XinFin Network's Masternode architecture. It will be an ideal scalable smart-contract public blockchain for decentralized apps, token issuances and token integrations for small and big businesses. What problem is XinFin Network aiming to solve? The problems that XinFin Network aims to solve can be summarized as follows: The network congestion on Ethereum (low transaction time) High transaction fees on Ethereum Most other blockchains are highly centralized and/or do not have interoperability with Ethereum system Blockchain has become one of the most disruptive technologies that enables many decentralized applications, including but not limited to cryptocurrencies, smart-contracts and supply-chain management. Blockchain proponents have been trying to inject it into this Industry 4.0 revolution era. In order to reach this goal, the current blockchain infrastructure must at least be able to compete with many mainstream technologies, such as Visa and MasterCard processors in financial services. Nevertheless, the reality is disappointing: Bitcoin and Ethereum can only process around 7 and 15 transactions per second, respectively. Remember that, these numbers in Visa and MasterCard are around 5'000-6'000 transactions per second. XinFin Network is continuously working and researching several scaling solutions. Regarding on-chain scaling, Sharding and Proof-of-Stake-based consensus are of potential that can significantly improve transaction processing performance while trying to maintain security requirements of the system. How does XinFin Network work? What is the architecture and consensus used? XinFin Network relies on a system of 18 Masternodes with XinFin Delegated Proof of stake (XDPoS) consensus that can support low fees (approx. 1/100 of that of Ethereum's) and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as Double Validation. Can you tell more about XinFin Delegated Proof of stake (XDPoS)? What is it? At the heart of XinFin Network, the XinFin Delegated Proof of stake (XDPoS) consensus enables XinFin Network as an EVM-compatible and scalable public blockchain, on which every Ethereum smart contract can be effectively run with almost instant transaction confirmation. XDPoS features its Masternode architecture in which token holders deposit 10,000,000 XDC to become a masternode. masternode are selected for block creation within a period, called epoch. Each masternode takes its block creation in a round-robin manner every 2-second and follows the double validation technique for security reinforcement. A block is finalised if it is signed off by 3/4 masternodes. At the end of each epoch, the masternodes that have signed finalised blocks are rewarded. What is Double Validation? Double Validation provides an additional trustless validation layer for security enhancement through a provable uniform distribution decentralized randomization. Specifically, when a block is created by a masternode, it must be verified by another masternode that is randomly selected among the set of masternodes before being added to the blockchain. Double validation strengthens XinFin Blockchain security, reduces fork and makes XinFin Network unique among other Delegated Proof of stake based blockchains. What is an 'epoch'? An epoch is a 900-block period of 2-second block time starting from block #1 (900 blocks x 2s/block = around 1800s or ~30 minutes). Which scaling solutions will XinFin Network implement? Will you have sharding? XinFin Network solutions are based on on-chain scaling built into an architecture of 18 masternodes with our XinFin Delegated Proof of stake (XDPoS) consensus protocol. We achieve 2-second block-time and almost instant transaction confirmation. To scale further our infrastructure, we have presented our Sharding proposal for uniquely integrating Sharding into our current architecture and consensus. Besides sharding, we are actively researching scalability solutions like EVM parallelization and Plasma. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be evaluated before being integrated into XinFin Network's masternode architecture. What makes XinFin Network different? The unique point of XinFin Network comes from technology, the products and the ecosystem. Novel technology: includes XinFin Delegated Proof of stake (XDPoS) consensus Build in governance D-app Double Validation and Randomization Sharding based on a stable masternode artichitecture This enables XinFin Network to achieve: Cheap transactions: approx. 1/100 of that of Ethereum 2000 TPS to handle a robust d-app and token ecosystem. 2 second block time for fast transactions EVM-compatibility allows for interoperability with Ethereum ecosystem. Our unique products XinFinScan: Shows all blocks, transactions, finality, smart contracts, D-Apps and token information XinFinMaster: Allows users to apply for a Masternode Candidate position; and shows Masternode performance statistics xdcwallet: Securely store, send, receive XinFin and other tokens issued on XinFin Network; Allows users to track rewards Our own ecosystem XinFin Network also is working vigorously on building its ecosystem and has sealed many partnerships from all fields such as agriculture, robotics, gaming, IT solution providers, advertising, pharmaceutical tracking, education and research, payment, communication, name service, food traceability and tourism. Which blockchain(s) are XinFin Network's main competitors? On the one hand, all base layer blockchains such as Ethereum, EOS, NEM, NEO etc are competitors because app developers/token issuers will generally choose only one blockchain to work on. On the other hand, it is too early to focus on competition as it is more important to expand the whole blockchain ecosystem rather than to compete. XinFin Network has a unique position in which it adds value to the Ethereum ecosystem by addressing scalability and governance issues while keeping the same smart-contracts and general architecture. XinFin Network is EVM-compatible. What does that mean? EVM means Ethereum Virtual Machine. XinFin Network supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. This means that any smart-contract written in Ethereum protocol can be easily ported to XinFin Network. Any d-App written in Ethereum can be seamlessly ported to XinFin Network. Is XinFin Network a side-chain of Ethereum? XinFin Network has its own blockchain since XinFin Network Mainnet is about to launch. Is XinFin Network compatible with Ethereum? Yes, any smart-contract written in Ethereum protocol can be easily ported to XinFin Network. This is one strength appealing to some dApp developers and some of our partners. Can developers make hybrid dApps using both Ethereum and XinFin Network in one single dApp? Yes, they can make an app, and deploy it to both Ethereum, and XinFin Network. It can be done relatively easy since XinFin Network supports EVM, and share a common architecture with Ethereum. How do you solve 'security problems' when using XinFin Network? In terms of security of consensus protocol, XinFin Network proposes Double Validation and Randomization to protect the system. XinFin Network solves some consensus-related security aspects: This problem is commonly discussed in PoS-based blockchain consensus and just like 51% attacks in PoW. XinFin Network solves it by using Double Validation and Randomization. The details are shown in our technical paper. Long-range attacks: Attackers can try to recreate all blocks from a very far position to the current block. Attackers can do that because PoS-based consensus does not require extra-ordinary hashing power to re-write the whole blockchain. XinFin Network addresses by providing finality. Once a block is signed by at least 3/4 masternodes, it is consider irreversible, meaning that any attempt to re-write the blockchain history will be rejected. DDoS and spamming attacks: XinFin Network's transaction fee is not zero (even it is very low), attackers still require a significant amount of XDC in order to flood the network for only a short time. Company \u00b6 Where is XinFin Network registered? You can check our company XinFin Network Pte. Ltd. information on the Singaporean registry You can also check the ACRA copy if you need more details. Where are XinFin Network offices? XinFin current offices is located in Singapore SINGAPORE Check us out on our main website ! Where can I take a look at XinFin Network code? Is there a GitHub repository? All the code regarding XinFin Network is free to consult on our GitHub . This includes the code for the XinFin Network blockchain client, governance DApp, block explorer, tools, docker images, documentation, etc. However, other blockchain related projects like ReplyBlock or drafts, work-in-progress and not yet disclosed projects are usually kept in private repositories. We like to publish code publicly when it reaches a certain level of development and/or when we think auditing and contributions are beneficial to the codebase. Keeping early projects private is probably more responsible for now due to our scale. It might change in the future. We are also working with some third parties with which we signed a non-disclosure-agreements for code development. Where can I contact you to get support? If you need support, please contact us on support@xinfin.org Which are XinFin Network's official channels for communication and information? You can keep in touch with our latest news here: Twitter Telegram Announcements Facebook Website Medium Reddit Ecosystem \u00b6 What incentives have partners and dApp developers to build on XinFin Network? XinFin Network supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. This means that any smart-contract written in Ethereum protocol can be easily ported to XinFin Network. Any d-App written in Ethereum can be seamlessly ported to XinFin Network, instantly enjoying all XinFin Network advantages: almost zero-transaction fee; 2-second confirmation time; 2'000 TPS. D-app developers also have dedicated technical support from XinFin Network developers. Besides the technical aspects, our partners will also benefit from the XinFin Network community support and fundraising opportunities, thanks to XinFin Network very good relationships with well-known investors. Where can I see XinFin Network partnerships? XinFin Network is working vigorously on building its ecosystem and has sealed 10 partnerships from all fields such as agriculture, robotics, gaming, IT solution providers, advertising, pharmaceutical tracking, education and research, payment, communication, name service, food traceability, tourism (as of Jan 2019). All partnership announcements can be found Medium and our official Twitter account for partnership announcements. You can also find a list of partners willing to run D-apps on XinFin Network. This list will be updated in the future. Where can I check the actual products, ecosystem? If you want to access it directly, you can find the links to our different products deployed in Testnet on our Block Explorer . The list of XinFin Network Products is as follows: XinFinScan, XinFinStats, XinFinMaster, XinFinWebWallet. XinFin - Economics \u00b6 What is XinFin? Can you describe the functions and purposes of XinFin? XDC is the native cryptocurrency of XinFin Network and will be the reserve cryptocurrency for all third-party apps running on XinFin Network. Being the protocol token for the XinFin Network infrastructure, XDC will be needed by all parties utilising XinFin Network to build apps or issue and integrate cryptographic tokens into their apps. The supply of XDC is fixed, long-term and non-inflationary. In addition to the above, XDC is an integral part of the XinFin Network network for a number of reasons. XinFin will be used to fund the development of XinFin Network and its ecosystem (XinFinScan, XinFinMaster, XinFinWebWallet, etc.). XinFin will be used as a incentivise the building of the XinFin Network engine/ecosystem. XinFin will be used as a long-term, decentralized governance instrument of the XinFin Network network. You can check our technical whitepaper for more details. Can I mine XDC? XDC is not mineable but mintable by masternodes. Masternodes are responsible for creating, verifying and finalizing the blocks created within a period, called epoch. Masternodes will receive block rewards. How often are block rewards paid out? Block rewards will be earnt every epoch, which lasts for 900 of two-second-block time (~30 minutes) When will XDC be listed on new exchanges? We do not discuss about exchange related questions due to the regulation. We will announce every exchange news on our official channels on due time. Is XDC an ERC-20 token? Since Mainnet is above to Launch, XDC has become the native coin of the XinFin Network blockchain. Where to store XDC? How can I send XDC to my wallet? You can store XinFin in XinFin Web Wallet or Mobile Wallet. Where can I buy XDC? (exchanges) For Now You can trade XDC on alphaex . Masternodes \u00b6 Does XinFin Network have Masternodes? How do they work? Yes, XinFin Network has a maximum of 18 Masternodes with XinFin Delegated Proof of stake (XDPOS) consensus for low transaction fee, and instant transaction confirmation. Masternodes create, verify and validate new blocks in XinFin platform. Masternode Candidates: Any account can deposit 10,000,000 XDC using XinFinMaster to become a masternode candidate. A candidate can resign, but the tokens will be locked for the next 30 days (1,296,000 blocks) after the resignation. A Masternode can resign, but the tokens will be locked for the next 30 days after the resignation. Rewards: The rewards a masternode receives in each epoch is proportional to the number of signatures it signs. Masternodes will also receive fees from the XinFin Network which is planned for development. XinFin Network masternodes started signing blocks and receiving block rewards on Mainnet. What is a masternode in the XinFin Network ecosystem? A XinFin Network masternode is a server which uses its computing power to contribute to the network. Its job is to create and sign blocks. For this contribution to the network, masternodes receive rewards in the form of XDC. What are the incentives to run a masternode? Masternodes contribute to the network and for this work they will receive a significant amount of block rewards, which will likely exceed the cost for running the infrastructure. However, masternode owners need to invest in XinFin Network by depositing at least 10,000,000 XDC, for the long term. When are Masternode rewards paid out? Masternode operators will receive rewards every epoch. An epoch is a 900-block period of 2-second block time (~30 minutes). How can I check my rewards? You can check your masternode rewards using XinFin WebWallet. Alternatively you can use XinFinScan. Masternode Candidate \u00b6 What is a masternode candidate? What is the difference between masternode candidate and masternode? A Masternode Candidate is any node who deposited 10,000,000 XDC and is listed on XinFinMaster . masternodes will be able to sign blocks and receive block rewards. How can I become a Masternode? The first step to become a masternode, is becoming a masternode candidate. To become a Masternode Candidate you need: to run XinFin Network software in a machine with certain minimal hardware requirements to deposit 10,000,000 XDC in a smart-contract via XinFinMaster The list of Masternode Candidates will be available on the governance DApp, XinFinMaster . Do I need to use my own computer to run a node? We recommend using an IaaS (\"cloud\") provider of your choice (like Amazon AWS, Digital Ocean, Google Cloud GCE, Vultr, etc). The machine must be directly facing internet (public IP, no NAT) and with 100% uptime. Which are the hardware requirements to run a node? Processing transactions is mostly CPU bound. Therefore we recommend running CPU optimized servers. Directly facing internet (public IP, no NAT) 16 cores CPU 32GB of RAM SSD storage We recommend using popular cloud providers as their reliability and uptime are close to 100%. Those servers would be a good starting point: DigitalOcean: CPU optimized droplet 32GB/16CPU Amazon EC2: C5 instance Google Cloud Engine: n1-highcpu-16 Setting up a masternode candidate on a weaker machine might result in poor performances, significantly impacting owner's rewards and the chain performance. Note: If you are running a node in Testnet, 2CPU/8GB of RAM is sufficient. How do Masternode Candidates become Masternodes? Once you are a Masternode Candidate, you need the support of XinFin Network community. Masternode candidates every period called epoch (900 blocks of 2-second block-time) will be promoted to Masternode. This list will change dynamically every epoch. masternodes will be able to sign blocks and will receive rewards in the form of XDC. Do I need two wallets to run a Masternode? It is recommended for security reasons. You can create your wallet from wherever you want, the only rule being that you need two of them. One for your masternode, and one to make the 10,000,000 XDC deposit (this account will receive the rewards). What is the 'coinbase address'? 'Coinbase address' is the public address used to run your node and register it to the system. We recommend using two addresses when running your nodes. The public address or 'coinbase address' will only receive transaction fees. The private address is from where you make the initial 10,000,000 XDC deposit and where the block rewards will be collected. How can I create a public 'coinbase address' wallet? Is it only with xdcwallet for Android? Are there other options? You need to create a wallet for the masternode public address. This wallet does not need to contain any XDC, think of it as a shell address. You will then stake XDC into the masternode address via your main XinFin Web wallet. You can use the Android apps. Also you can create wallets with XinFin Web Wallet. You can also use https://wallet.testnet.xinfin.org to create an empty wallet, then use it as coinbase address. I noticed that we need another wallet for masternode? It is recommended to use a separate empty account for your masternode as it only receive transactions fees - what we call public or 'coinbase address' on the documentation. The block rewards are sent to the account connected to XinFinMaster who make the initial deposit - the 'private' address. Can I use the same address pair (XinFin-Node or One-Click-Installer public address + initial deposit address) for all my nodes? Or I have to transfer tokens to another wallet and start the second node? No. Must use different public 'coinbase' addresses. But you can use the same initial deposit ('private') address, then all rewards will be transferred to only one address. I have finished all steps of setting up node. Why I don't see my node on XinFinMaster? You must apply to become a masternode candidate. Do I need to deposit the 10,000,000 XDC before or after running 'One-Click-Installer' in VPS? After. Your node must be fully synched before applying. How do I check the blockchain sync status from the node? You can watch the logs, but it is easier from the XinFinStats website or its eth.blockNumber API call. If the masternode owner deposits 11,000,000 XDC instead of 10,000,000 XDC on its own node, can it later on unstake the excess ? Yes, it can. Why is a node flagged as 'Slashed'? A masternode will be automatically slashed by the Slashing Mechanism if the node doesn't validate any block within an epoch. Some reasons for this might be that the masternode does not have the correct XinFin Network software, lack of memory or masternode crashes due to the lack of e-maintenance and operation by the masternode owner. A Slashed node will be 'kicked out' for the next 4 epochs. At the 5th epoch after being slashed, the slashed masternode can go back to the candidate list. How many nodes I am allowed to run? As many as you can. How can I resign as Masternode? If you no longer want to be a masternode, you can resign on XinFinMaster. Your masternode will stop generating rewards and your funds will be locked for 30 days (1 296 000 blocks). After the lockup period you will be able to withdraw your 10,000,000 XDC deposit. Can I close the node entirely, then start a new one with a totally separate coinbase address without being penalized? No. Your old node will be penalized (10,000,000 XDC initial deposit 30-day lockup) and your new node has to apply again. Is it possible to move a masternode later, like backup and start it from another IP address? Yes. Products \u00b6 XinFinScan \u00b6 What is XinFinScan? XinFinScan is our block explorer. It is pretty similar to EtherScan if you are already familiar with it. XinFinScan provides a user friendly, details and perfection-oriented user interface for XinFin Network block explorer. From a user perspective, XinFinScan brings XinFinChain\u2019s transparency to users, because all block, transaction, finality, smart contracts, dApp and token information are read from XinFin Network and shown to users. Furthermore, XinFinScan also offers technical visualisations and does useful statistics about the XinFin Network performance, token holders and other functionalities. What is a TxHash? How to check a TxHash? TxHash stands for 'transaction hash', and is also known as a transaction ID. An example of what a TxHash looks like: 0x838d33119b33e4519cb201e49bfc570ddc0fbdc6d9cf7038d8254a4de97f7112 To check a TxHash, follow the steps below: On XinFinScan , go to the search bar with the magnifying glass icon. Paste your transaction hash (TxHash) in the search bar and click the icon or press ENTER. Your transaction details will show up. XinFinStats \u00b6 What is XinFinStats? XinFinStats shows the various metrics regarding the current mainnet including the current number of masternodes, masternodes performance, current TPS, block-time, confirmation time, finality and other useful metrics. How much is the average time to see my node appear on XinFinStats? It should be less than a minute after One-Click-Installer command is executed and finished. Stats page wasn't working and showed a 70-second block. What happened? The stats page is javascript code running in your browser. If your computer loses internet connection or the page is not active anymore for some reasons, the time will increase forever. In this case just refresh the page. XinFinMaster \u00b6 What is XinFinMaster? XinFinMaster , the 'Governance dApp', provides a professional UI that allows to see the list of masternodes and candidates, to deposit 10,000,000 XDC to become a masternode candidate, to vote for masternodes, and to show masternode performance statistics. How do I login on XinFinMaster? Go to XinFinMaster. On the top-right corner click 'Login'. Then select how do you want to login: with Private Key. What is the 'capacity' of a Candidate/Masternode? The capacity of a candidate is the 10,000,000 XDC initial deposit for that candidate. What is a 'checkpoint'? For each iteration of 900 blocks (called epoch), a checkpoint block is created, which implements only reward works. The masternode, who takes turn in the circular and sequential order to create blocks, has to scan all of the created blocks in the epoch and count number of signatures. It is worth noting that token holders who unvote before the checkpoint block will not receive any shared reward in the Staking Reward portion. I want to stop running my node. If you don't want to run your masternode anymore, please remember to resign before shutting down the node.","title":"FAQ"},{"location":"general/faq/#general","text":"","title":"General"},{"location":"general/faq/#xinfin-network","text":"What is XinFin Network? XinFin Network is an innovative solution to the scalability problem of the Ethereum blockchain, and other current blockchain platforms. XinFin Network relies on a system of 18 Masternodes with XinFin Delegated Proof of stake (XDPOS)consensus that can support low transaction fees and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as double validation, staking via smart-contracts and true randomization processes. XinFin Network supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be continuously researched and incorporated into XinFin Network's Masternode architecture. It will be an ideal scalable smart-contract public blockchain for decentralized apps, token issuances and token integrations for small and big businesses. What problem is XinFin Network aiming to solve? The problems that XinFin Network aims to solve can be summarized as follows: The network congestion on Ethereum (low transaction time) High transaction fees on Ethereum Most other blockchains are highly centralized and/or do not have interoperability with Ethereum system Blockchain has become one of the most disruptive technologies that enables many decentralized applications, including but not limited to cryptocurrencies, smart-contracts and supply-chain management. Blockchain proponents have been trying to inject it into this Industry 4.0 revolution era. In order to reach this goal, the current blockchain infrastructure must at least be able to compete with many mainstream technologies, such as Visa and MasterCard processors in financial services. Nevertheless, the reality is disappointing: Bitcoin and Ethereum can only process around 7 and 15 transactions per second, respectively. Remember that, these numbers in Visa and MasterCard are around 5'000-6'000 transactions per second. XinFin Network is continuously working and researching several scaling solutions. Regarding on-chain scaling, Sharding and Proof-of-Stake-based consensus are of potential that can significantly improve transaction processing performance while trying to maintain security requirements of the system. How does XinFin Network work? What is the architecture and consensus used? XinFin Network relies on a system of 18 Masternodes with XinFin Delegated Proof of stake (XDPoS) consensus that can support low fees (approx. 1/100 of that of Ethereum's) and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as Double Validation. Can you tell more about XinFin Delegated Proof of stake (XDPoS)? What is it? At the heart of XinFin Network, the XinFin Delegated Proof of stake (XDPoS) consensus enables XinFin Network as an EVM-compatible and scalable public blockchain, on which every Ethereum smart contract can be effectively run with almost instant transaction confirmation. XDPoS features its Masternode architecture in which token holders deposit 10,000,000 XDC to become a masternode. masternode are selected for block creation within a period, called epoch. Each masternode takes its block creation in a round-robin manner every 2-second and follows the double validation technique for security reinforcement. A block is finalised if it is signed off by 3/4 masternodes. At the end of each epoch, the masternodes that have signed finalised blocks are rewarded. What is Double Validation? Double Validation provides an additional trustless validation layer for security enhancement through a provable uniform distribution decentralized randomization. Specifically, when a block is created by a masternode, it must be verified by another masternode that is randomly selected among the set of masternodes before being added to the blockchain. Double validation strengthens XinFin Blockchain security, reduces fork and makes XinFin Network unique among other Delegated Proof of stake based blockchains. What is an 'epoch'? An epoch is a 900-block period of 2-second block time starting from block #1 (900 blocks x 2s/block = around 1800s or ~30 minutes). Which scaling solutions will XinFin Network implement? Will you have sharding? XinFin Network solutions are based on on-chain scaling built into an architecture of 18 masternodes with our XinFin Delegated Proof of stake (XDPoS) consensus protocol. We achieve 2-second block-time and almost instant transaction confirmation. To scale further our infrastructure, we have presented our Sharding proposal for uniquely integrating Sharding into our current architecture and consensus. Besides sharding, we are actively researching scalability solutions like EVM parallelization and Plasma. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be evaluated before being integrated into XinFin Network's masternode architecture. What makes XinFin Network different? The unique point of XinFin Network comes from technology, the products and the ecosystem. Novel technology: includes XinFin Delegated Proof of stake (XDPoS) consensus Build in governance D-app Double Validation and Randomization Sharding based on a stable masternode artichitecture This enables XinFin Network to achieve: Cheap transactions: approx. 1/100 of that of Ethereum 2000 TPS to handle a robust d-app and token ecosystem. 2 second block time for fast transactions EVM-compatibility allows for interoperability with Ethereum ecosystem. Our unique products XinFinScan: Shows all blocks, transactions, finality, smart contracts, D-Apps and token information XinFinMaster: Allows users to apply for a Masternode Candidate position; and shows Masternode performance statistics xdcwallet: Securely store, send, receive XinFin and other tokens issued on XinFin Network; Allows users to track rewards Our own ecosystem XinFin Network also is working vigorously on building its ecosystem and has sealed many partnerships from all fields such as agriculture, robotics, gaming, IT solution providers, advertising, pharmaceutical tracking, education and research, payment, communication, name service, food traceability and tourism. Which blockchain(s) are XinFin Network's main competitors? On the one hand, all base layer blockchains such as Ethereum, EOS, NEM, NEO etc are competitors because app developers/token issuers will generally choose only one blockchain to work on. On the other hand, it is too early to focus on competition as it is more important to expand the whole blockchain ecosystem rather than to compete. XinFin Network has a unique position in which it adds value to the Ethereum ecosystem by addressing scalability and governance issues while keeping the same smart-contracts and general architecture. XinFin Network is EVM-compatible. What does that mean? EVM means Ethereum Virtual Machine. XinFin Network supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. This means that any smart-contract written in Ethereum protocol can be easily ported to XinFin Network. Any d-App written in Ethereum can be seamlessly ported to XinFin Network. Is XinFin Network a side-chain of Ethereum? XinFin Network has its own blockchain since XinFin Network Mainnet is about to launch. Is XinFin Network compatible with Ethereum? Yes, any smart-contract written in Ethereum protocol can be easily ported to XinFin Network. This is one strength appealing to some dApp developers and some of our partners. Can developers make hybrid dApps using both Ethereum and XinFin Network in one single dApp? Yes, they can make an app, and deploy it to both Ethereum, and XinFin Network. It can be done relatively easy since XinFin Network supports EVM, and share a common architecture with Ethereum. How do you solve 'security problems' when using XinFin Network? In terms of security of consensus protocol, XinFin Network proposes Double Validation and Randomization to protect the system. XinFin Network solves some consensus-related security aspects: This problem is commonly discussed in PoS-based blockchain consensus and just like 51% attacks in PoW. XinFin Network solves it by using Double Validation and Randomization. The details are shown in our technical paper. Long-range attacks: Attackers can try to recreate all blocks from a very far position to the current block. Attackers can do that because PoS-based consensus does not require extra-ordinary hashing power to re-write the whole blockchain. XinFin Network addresses by providing finality. Once a block is signed by at least 3/4 masternodes, it is consider irreversible, meaning that any attempt to re-write the blockchain history will be rejected. DDoS and spamming attacks: XinFin Network's transaction fee is not zero (even it is very low), attackers still require a significant amount of XDC in order to flood the network for only a short time.","title":"XinFin Network"},{"location":"general/faq/#company","text":"Where is XinFin Network registered? You can check our company XinFin Network Pte. Ltd. information on the Singaporean registry You can also check the ACRA copy if you need more details. Where are XinFin Network offices? XinFin current offices is located in Singapore SINGAPORE Check us out on our main website ! Where can I take a look at XinFin Network code? Is there a GitHub repository? All the code regarding XinFin Network is free to consult on our GitHub . This includes the code for the XinFin Network blockchain client, governance DApp, block explorer, tools, docker images, documentation, etc. However, other blockchain related projects like ReplyBlock or drafts, work-in-progress and not yet disclosed projects are usually kept in private repositories. We like to publish code publicly when it reaches a certain level of development and/or when we think auditing and contributions are beneficial to the codebase. Keeping early projects private is probably more responsible for now due to our scale. It might change in the future. We are also working with some third parties with which we signed a non-disclosure-agreements for code development. Where can I contact you to get support? If you need support, please contact us on support@xinfin.org Which are XinFin Network's official channels for communication and information? You can keep in touch with our latest news here: Twitter Telegram Announcements Facebook Website Medium Reddit","title":"Company"},{"location":"general/faq/#ecosystem","text":"What incentives have partners and dApp developers to build on XinFin Network? XinFin Network supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. This means that any smart-contract written in Ethereum protocol can be easily ported to XinFin Network. Any d-App written in Ethereum can be seamlessly ported to XinFin Network, instantly enjoying all XinFin Network advantages: almost zero-transaction fee; 2-second confirmation time; 2'000 TPS. D-app developers also have dedicated technical support from XinFin Network developers. Besides the technical aspects, our partners will also benefit from the XinFin Network community support and fundraising opportunities, thanks to XinFin Network very good relationships with well-known investors. Where can I see XinFin Network partnerships? XinFin Network is working vigorously on building its ecosystem and has sealed 10 partnerships from all fields such as agriculture, robotics, gaming, IT solution providers, advertising, pharmaceutical tracking, education and research, payment, communication, name service, food traceability, tourism (as of Jan 2019). All partnership announcements can be found Medium and our official Twitter account for partnership announcements. You can also find a list of partners willing to run D-apps on XinFin Network. This list will be updated in the future. Where can I check the actual products, ecosystem? If you want to access it directly, you can find the links to our different products deployed in Testnet on our Block Explorer . The list of XinFin Network Products is as follows: XinFinScan, XinFinStats, XinFinMaster, XinFinWebWallet.","title":"Ecosystem"},{"location":"general/faq/#xinfin-economics","text":"What is XinFin? Can you describe the functions and purposes of XinFin? XDC is the native cryptocurrency of XinFin Network and will be the reserve cryptocurrency for all third-party apps running on XinFin Network. Being the protocol token for the XinFin Network infrastructure, XDC will be needed by all parties utilising XinFin Network to build apps or issue and integrate cryptographic tokens into their apps. The supply of XDC is fixed, long-term and non-inflationary. In addition to the above, XDC is an integral part of the XinFin Network network for a number of reasons. XinFin will be used to fund the development of XinFin Network and its ecosystem (XinFinScan, XinFinMaster, XinFinWebWallet, etc.). XinFin will be used as a incentivise the building of the XinFin Network engine/ecosystem. XinFin will be used as a long-term, decentralized governance instrument of the XinFin Network network. You can check our technical whitepaper for more details. Can I mine XDC? XDC is not mineable but mintable by masternodes. Masternodes are responsible for creating, verifying and finalizing the blocks created within a period, called epoch. Masternodes will receive block rewards. How often are block rewards paid out? Block rewards will be earnt every epoch, which lasts for 900 of two-second-block time (~30 minutes) When will XDC be listed on new exchanges? We do not discuss about exchange related questions due to the regulation. We will announce every exchange news on our official channels on due time. Is XDC an ERC-20 token? Since Mainnet is above to Launch, XDC has become the native coin of the XinFin Network blockchain. Where to store XDC? How can I send XDC to my wallet? You can store XinFin in XinFin Web Wallet or Mobile Wallet. Where can I buy XDC? (exchanges) For Now You can trade XDC on alphaex .","title":"XinFin - Economics"},{"location":"general/faq/#masternodes","text":"Does XinFin Network have Masternodes? How do they work? Yes, XinFin Network has a maximum of 18 Masternodes with XinFin Delegated Proof of stake (XDPOS) consensus for low transaction fee, and instant transaction confirmation. Masternodes create, verify and validate new blocks in XinFin platform. Masternode Candidates: Any account can deposit 10,000,000 XDC using XinFinMaster to become a masternode candidate. A candidate can resign, but the tokens will be locked for the next 30 days (1,296,000 blocks) after the resignation. A Masternode can resign, but the tokens will be locked for the next 30 days after the resignation. Rewards: The rewards a masternode receives in each epoch is proportional to the number of signatures it signs. Masternodes will also receive fees from the XinFin Network which is planned for development. XinFin Network masternodes started signing blocks and receiving block rewards on Mainnet. What is a masternode in the XinFin Network ecosystem? A XinFin Network masternode is a server which uses its computing power to contribute to the network. Its job is to create and sign blocks. For this contribution to the network, masternodes receive rewards in the form of XDC. What are the incentives to run a masternode? Masternodes contribute to the network and for this work they will receive a significant amount of block rewards, which will likely exceed the cost for running the infrastructure. However, masternode owners need to invest in XinFin Network by depositing at least 10,000,000 XDC, for the long term. When are Masternode rewards paid out? Masternode operators will receive rewards every epoch. An epoch is a 900-block period of 2-second block time (~30 minutes). How can I check my rewards? You can check your masternode rewards using XinFin WebWallet. Alternatively you can use XinFinScan.","title":"Masternodes"},{"location":"general/faq/#masternode-candidate","text":"What is a masternode candidate? What is the difference between masternode candidate and masternode? A Masternode Candidate is any node who deposited 10,000,000 XDC and is listed on XinFinMaster . masternodes will be able to sign blocks and receive block rewards. How can I become a Masternode? The first step to become a masternode, is becoming a masternode candidate. To become a Masternode Candidate you need: to run XinFin Network software in a machine with certain minimal hardware requirements to deposit 10,000,000 XDC in a smart-contract via XinFinMaster The list of Masternode Candidates will be available on the governance DApp, XinFinMaster . Do I need to use my own computer to run a node? We recommend using an IaaS (\"cloud\") provider of your choice (like Amazon AWS, Digital Ocean, Google Cloud GCE, Vultr, etc). The machine must be directly facing internet (public IP, no NAT) and with 100% uptime. Which are the hardware requirements to run a node? Processing transactions is mostly CPU bound. Therefore we recommend running CPU optimized servers. Directly facing internet (public IP, no NAT) 16 cores CPU 32GB of RAM SSD storage We recommend using popular cloud providers as their reliability and uptime are close to 100%. Those servers would be a good starting point: DigitalOcean: CPU optimized droplet 32GB/16CPU Amazon EC2: C5 instance Google Cloud Engine: n1-highcpu-16 Setting up a masternode candidate on a weaker machine might result in poor performances, significantly impacting owner's rewards and the chain performance. Note: If you are running a node in Testnet, 2CPU/8GB of RAM is sufficient. How do Masternode Candidates become Masternodes? Once you are a Masternode Candidate, you need the support of XinFin Network community. Masternode candidates every period called epoch (900 blocks of 2-second block-time) will be promoted to Masternode. This list will change dynamically every epoch. masternodes will be able to sign blocks and will receive rewards in the form of XDC. Do I need two wallets to run a Masternode? It is recommended for security reasons. You can create your wallet from wherever you want, the only rule being that you need two of them. One for your masternode, and one to make the 10,000,000 XDC deposit (this account will receive the rewards). What is the 'coinbase address'? 'Coinbase address' is the public address used to run your node and register it to the system. We recommend using two addresses when running your nodes. The public address or 'coinbase address' will only receive transaction fees. The private address is from where you make the initial 10,000,000 XDC deposit and where the block rewards will be collected. How can I create a public 'coinbase address' wallet? Is it only with xdcwallet for Android? Are there other options? You need to create a wallet for the masternode public address. This wallet does not need to contain any XDC, think of it as a shell address. You will then stake XDC into the masternode address via your main XinFin Web wallet. You can use the Android apps. Also you can create wallets with XinFin Web Wallet. You can also use https://wallet.testnet.xinfin.org to create an empty wallet, then use it as coinbase address. I noticed that we need another wallet for masternode? It is recommended to use a separate empty account for your masternode as it only receive transactions fees - what we call public or 'coinbase address' on the documentation. The block rewards are sent to the account connected to XinFinMaster who make the initial deposit - the 'private' address. Can I use the same address pair (XinFin-Node or One-Click-Installer public address + initial deposit address) for all my nodes? Or I have to transfer tokens to another wallet and start the second node? No. Must use different public 'coinbase' addresses. But you can use the same initial deposit ('private') address, then all rewards will be transferred to only one address. I have finished all steps of setting up node. Why I don't see my node on XinFinMaster? You must apply to become a masternode candidate. Do I need to deposit the 10,000,000 XDC before or after running 'One-Click-Installer' in VPS? After. Your node must be fully synched before applying. How do I check the blockchain sync status from the node? You can watch the logs, but it is easier from the XinFinStats website or its eth.blockNumber API call. If the masternode owner deposits 11,000,000 XDC instead of 10,000,000 XDC on its own node, can it later on unstake the excess ? Yes, it can. Why is a node flagged as 'Slashed'? A masternode will be automatically slashed by the Slashing Mechanism if the node doesn't validate any block within an epoch. Some reasons for this might be that the masternode does not have the correct XinFin Network software, lack of memory or masternode crashes due to the lack of e-maintenance and operation by the masternode owner. A Slashed node will be 'kicked out' for the next 4 epochs. At the 5th epoch after being slashed, the slashed masternode can go back to the candidate list. How many nodes I am allowed to run? As many as you can. How can I resign as Masternode? If you no longer want to be a masternode, you can resign on XinFinMaster. Your masternode will stop generating rewards and your funds will be locked for 30 days (1 296 000 blocks). After the lockup period you will be able to withdraw your 10,000,000 XDC deposit. Can I close the node entirely, then start a new one with a totally separate coinbase address without being penalized? No. Your old node will be penalized (10,000,000 XDC initial deposit 30-day lockup) and your new node has to apply again. Is it possible to move a masternode later, like backup and start it from another IP address? Yes.","title":"Masternode Candidate"},{"location":"general/faq/#products","text":"","title":"Products"},{"location":"general/faq/#xinfinscan","text":"What is XinFinScan? XinFinScan is our block explorer. It is pretty similar to EtherScan if you are already familiar with it. XinFinScan provides a user friendly, details and perfection-oriented user interface for XinFin Network block explorer. From a user perspective, XinFinScan brings XinFinChain\u2019s transparency to users, because all block, transaction, finality, smart contracts, dApp and token information are read from XinFin Network and shown to users. Furthermore, XinFinScan also offers technical visualisations and does useful statistics about the XinFin Network performance, token holders and other functionalities. What is a TxHash? How to check a TxHash? TxHash stands for 'transaction hash', and is also known as a transaction ID. An example of what a TxHash looks like: 0x838d33119b33e4519cb201e49bfc570ddc0fbdc6d9cf7038d8254a4de97f7112 To check a TxHash, follow the steps below: On XinFinScan , go to the search bar with the magnifying glass icon. Paste your transaction hash (TxHash) in the search bar and click the icon or press ENTER. Your transaction details will show up.","title":"XinFinScan"},{"location":"general/faq/#xinfinstats","text":"What is XinFinStats? XinFinStats shows the various metrics regarding the current mainnet including the current number of masternodes, masternodes performance, current TPS, block-time, confirmation time, finality and other useful metrics. How much is the average time to see my node appear on XinFinStats? It should be less than a minute after One-Click-Installer command is executed and finished. Stats page wasn't working and showed a 70-second block. What happened? The stats page is javascript code running in your browser. If your computer loses internet connection or the page is not active anymore for some reasons, the time will increase forever. In this case just refresh the page.","title":"XinFinStats"},{"location":"general/faq/#xinfinmaster","text":"What is XinFinMaster? XinFinMaster , the 'Governance dApp', provides a professional UI that allows to see the list of masternodes and candidates, to deposit 10,000,000 XDC to become a masternode candidate, to vote for masternodes, and to show masternode performance statistics. How do I login on XinFinMaster? Go to XinFinMaster. On the top-right corner click 'Login'. Then select how do you want to login: with Private Key. What is the 'capacity' of a Candidate/Masternode? The capacity of a candidate is the 10,000,000 XDC initial deposit for that candidate. What is a 'checkpoint'? For each iteration of 900 blocks (called epoch), a checkpoint block is created, which implements only reward works. The masternode, who takes turn in the circular and sequential order to create blocks, has to scan all of the created blocks in the epoch and count number of signatures. It is worth noting that token holders who unvote before the checkpoint block will not receive any shared reward in the Staking Reward portion. I want to stop running my node. If you don't want to run your masternode anymore, please remember to resign before shutting down the node.","title":"XinFinMaster"},{"location":"general/networks/","text":"XinFin MainNet Specifications \u00b6 Chain id: 50 RPC endpoint: https://rpc.xinfin.network Websocket endpoint: wss://ws.xinfin.network Consensus: XDPoS Block finality: >75% Consensus nodes: up to 108 (masternodes) Genesis block date: 2019-05-31 Transaction fee: gas price 0.25 Gwei Usefull links \u00b6 Status Page XinFin Explorer (XinFin Scan) XinFin MasterNode APP (MasterNodeApp) Bootnodes \u00b6 0x Stats websocket secret \u00b6 xinfin_xdpos_hybrid_network_stats Apothem Network (TestNet) Specifications \u00b6 Chain id: 51 RPC endpoint: https://rpc.apothem.network Websocket endpoint: wss://ws.apothem.network Consensus: XDPoS Block finality: >75% Consensus nodes: up to 108 (masternodes) Transaction fee: gas price 0.25 Gwei Usefull links \u00b6 Status Page XinFin Explorer (XinFin Scan) XinFin MasterNode APP (MasterNodeApp) Bootnodes \u00b6 0x Stats websocket secret \u00b6 xdc_xinfin_apothem_network_stats For developers \u00b6 Testnet is the best way to test your smart contracts. Configure your deployment tool to connect to the testnet and deploy your new code without having to worry about fees. For investors and enthusiasts \u00b6 You will find on the Testnet the exact same ecosystem as on the actual Mainnet. You can try all the features we propose like voting, running a masternode, discovering our dApps, etc.","title":"Networks"},{"location":"general/networks/#specifications","text":"Chain id: 50 RPC endpoint: https://rpc.xinfin.network Websocket endpoint: wss://ws.xinfin.network Consensus: XDPoS Block finality: >75% Consensus nodes: up to 108 (masternodes) Genesis block date: 2019-05-31 Transaction fee: gas price 0.25 Gwei","title":"Specifications"},{"location":"general/networks/#usefull-links","text":"Status Page XinFin Explorer (XinFin Scan) XinFin MasterNode APP (MasterNodeApp)","title":"Usefull links"},{"location":"general/networks/#bootnodes","text":"0x","title":"Bootnodes"},{"location":"general/networks/#stats-websocket-secret","text":"xinfin_xdpos_hybrid_network_stats Apothem Network (TestNet)","title":"Stats websocket secret"},{"location":"general/networks/#specifications_1","text":"Chain id: 51 RPC endpoint: https://rpc.apothem.network Websocket endpoint: wss://ws.apothem.network Consensus: XDPoS Block finality: >75% Consensus nodes: up to 108 (masternodes) Transaction fee: gas price 0.25 Gwei","title":"Specifications"},{"location":"general/networks/#usefull-links_1","text":"Status Page XinFin Explorer (XinFin Scan) XinFin MasterNode APP (MasterNodeApp)","title":"Usefull links"},{"location":"general/networks/#bootnodes_1","text":"0x","title":"Bootnodes"},{"location":"general/networks/#stats-websocket-secret_1","text":"xdc_xinfin_apothem_network_stats","title":"Stats websocket secret"},{"location":"general/networks/#for-developers","text":"Testnet is the best way to test your smart contracts. Configure your deployment tool to connect to the testnet and deploy your new code without having to worry about fees.","title":"For developers"},{"location":"general/networks/#for-investors-and-enthusiasts","text":"You will find on the Testnet the exact same ecosystem as on the actual Mainnet. You can try all the features we propose like voting, running a masternode, discovering our dApps, etc.","title":"For investors and enthusiasts"},{"location":"general/utilities/","text":"XDC/XDCE UTILITY The XDC token is the underlying utility token that powers XinFin's Hybrid Blockchain. The XDC token acts as a settlement mechanism for DApps built on the XinFin Hybrid Blockchain. XinFin has also launched an Ethereum token called XDCE that can be traded with XDC utility token at a 1:1 ratio. This gives the token holder flexibility to hold tokens in either form for utility. The ERC-20 token can be swapped for the XDC token at a ratio of 1:1. This swap can be facilitated on the AlphaEx exchange. AlphaEx is compatible with all decentralised exchanges and has a presence in liquidity markets and supports XDC liquidity. Partners willing to run applications on top of XinFin Network Leading Platform for Smart Contract Creation, Deployment, Interaction & Token Offering: www.mycontract.co Invoice Factoring, Bond Creation and Open Standards Protocol for Global Trade & Finance: www.tradefinex.org You can consult a more detailed list of dApps on the main website www.xinfin.org.","title":"Use cases"},{"location":"get-started/ConnLeg/","text":"ISO20022 Data Set APIs \u00b6 Captures data from ERP, SWIFT, Core Banking and wraps it under a ISO20022 data set. In the XDC Protocol, we add the transaction hash from private network or it's corresponding hash on the public network and append it to the Supplimentary data field in the ISO20022 data set. Reference Codebase ERP Connectors \u00b6 Connects and extracts data from SAP ERP system for applications such as inFactor.io or TradeFinex.org. This data can then be sent between private nodes using XDC Protocol Private(ISO20022) Reference Connector Open Source ERP Core Banking Connectors \u00b6 Captures data from banking systems such as accounts, balances, transactions. This data can be relayed on the XinFin Public Network or a private network. Reference Codebase SWIFT System Connectors \u00b6 Using SWIFT Network as rails by parsing the MT103 messages Reference Codebase","title":"Connecting Legacy Systems"},{"location":"get-started/ConnLeg/#iso20022-data-set-apis","text":"Captures data from ERP, SWIFT, Core Banking and wraps it under a ISO20022 data set. In the XDC Protocol, we add the transaction hash from private network or it's corresponding hash on the public network and append it to the Supplimentary data field in the ISO20022 data set. Reference Codebase","title":"ISO20022 Data Set APIs"},{"location":"get-started/ConnLeg/#erp-connectors","text":"Connects and extracts data from SAP ERP system for applications such as inFactor.io or TradeFinex.org. This data can then be sent between private nodes using XDC Protocol Private(ISO20022) Reference Connector Open Source ERP","title":"ERP Connectors"},{"location":"get-started/ConnLeg/#core-banking-connectors","text":"Captures data from banking systems such as accounts, balances, transactions. This data can be relayed on the XinFin Public Network or a private network. Reference Codebase","title":"Core Banking Connectors"},{"location":"get-started/ConnLeg/#swift-system-connectors","text":"Using SWIFT Network as rails by parsing the MT103 messages Reference Codebase","title":"SWIFT System Connectors"},{"location":"get-started/POW-DPOS/","text":"Why XinFin Removed POW and Replaced it with XDPoS XinFin developed a scalable, secure and enterprise grade hybrid blockchain platform that combined the best features of Bitcoin, Ethereum and Quorum. XinFin's blockchain is a combination of permissioned and public chains that can nicely address security and scalability. XinFin Hybrid Blockchain platform has matured through continuous development and improvements. XinFin's Consensus Mechanism XinFin removed traditional high electrical power consumption based mining mechanism called PoW (Proof of Work). Instead XinFin adopted an improved consensus methodology called PoS (Proof of Stake), and is now slowly moving towards XinFin Delegated Proof of Stake (XDPoS). To understand behind XinFin's decision to go for XDPoS, we need to discuss briefly about the consensus mechanisms. What is Consensus and how PoS, and XDPoS are better than PoW Consensus means a general agreement which is an important component of blockchain technology. Instead of keeping the accounts in a centralized computing machine, as in a bank or centralized online payment system, cryptocurrency uses distributed ledgers or blockchains to record information. A general agreement is needed to record information, such as the balance of every address, transactions, etc. on the blockchain. Proof of Work or PoW relies on solving a cryptographic puzzle repetitively over all the nodes of the network. PoW involves burning very high amount of electrical energy. Proof of Stake doesn't need computers for repetitive solving of the cryptographic puzzle. Insead of miners, PoS requires some validators who will lock some of their crypto coins as stake or deposit. Anybody who holds crypto tokens can become a validator by processing a special type of transaction to lock their crypto fund. A group of validators takes part to propose the next block, and the weight of each validator's depends on the uptime of the node. When the validators discover a block which they think can be added to the blockchain, they will validate it by placing a bet on it. The validators will get a reward proportionate to their bets. How XinFin Delegated Proof of Stake works XinFin Delegated Proof-of-Stake (XDPoS) is more efficient than PoS consensus mechanism. XDPoS uses a reputation system to achieve consensus. The Master node of the network create blocks in a round robin manner. The elected block producers or the witnesses are rewarded for validation of the transactions for the next block. i) Block producers are elected randomly and are limited in numbers who can sign and create blocks. ii) Block validators are the full nodes who verify that the blocks created by the block producers follow the consensus rule. The main difference between XDPoS and PoS is in the consensus mechanism of XDPoS. The community members have more rights in governance of the network. pos and cons of XinFin Delegated Proof of Stake In XDPoS consensus, only the Master Node or the block producers can create the blocks. The transactions are permitted only within the limited number of witnesses. Therefore, XDPoS helps to make processing faster, reduce cost and improve scaling. The witnesses are regularly monitored. If they are found to be malicious, i.e. try to censor transactions or double spend, the other master node can fire a witness by slashing them for the next round. XinFin prefers XDPoS because of speed, cost and scalability Since XDPoS is more democratic, faster, efficient and effective to scale, XinFin naturally preferred to XDPoS.","title":"POW Replaced with DPOS"},{"location":"get-started/Setupmn/","text":"Setup a Masternode with XinFin MainNet in 8 Simple Steps \u00b6 Step 1: Host the Masternode either by downloading the One-Click Installer (recommended) or by using a Docker Compose file. Download the One-Click Installer (Recommended), Or Setup Masternode using Docker Compose. Step 2: Once downloaded, run the One-Click Installer on the server. On successful installation, you will get the Coinbase address as shown below. Step 3: View the active node at by clicking here. Step 4: Create a new account address from the XinFin wallet. An exclusive address will be generated. The new address generated would contain the balance required to propose the Masternode. Step 5: Log in to the Masternode app using the private key. Step 6: Become a candidate and upload the Know Your Community (KYC) certificate in PDF format. This KYC certificate needs to be signed by one of the following personnel: Company Secretary, A Notary Public, Chartered Secretary, Consulate, or A lawyer with Seal. For INDIVIDUAL format, click here . For ORGANIZATION format, [click here] (https://docs.google.com/document/d/1eyjFp3DXhrpLscngELocmXFwJ_Y8H9si6n8Z2SLADhg/edit). Note: It\u2019s mandatory to upload the certificate in a PDF format. Step 7: Once the KYC is uploaded, enter the Coinbase address and lock 10 million XDC tokens before running the Masternode. Step 8: The proposed node will be added to the Masternode randomly through the Round-Robin method. On successful addition to the Masternode, the reward will be sent to the assigned XinFin Wallet. Masternode Tools and Public Community Channel \u00b6 Community Forum update link: Telegram Development Community: Slack Public Channel:","title":"Set up Master Nodes"},{"location":"get-started/Setupmn/#setup-a-masternode-with-xinfin-mainnet-in-8-simple-steps","text":"Step 1: Host the Masternode either by downloading the One-Click Installer (recommended) or by using a Docker Compose file. Download the One-Click Installer (Recommended), Or Setup Masternode using Docker Compose. Step 2: Once downloaded, run the One-Click Installer on the server. On successful installation, you will get the Coinbase address as shown below. Step 3: View the active node at by clicking here. Step 4: Create a new account address from the XinFin wallet. An exclusive address will be generated. The new address generated would contain the balance required to propose the Masternode. Step 5: Log in to the Masternode app using the private key. Step 6: Become a candidate and upload the Know Your Community (KYC) certificate in PDF format. This KYC certificate needs to be signed by one of the following personnel: Company Secretary, A Notary Public, Chartered Secretary, Consulate, or A lawyer with Seal. For INDIVIDUAL format, click here . For ORGANIZATION format, [click here] (https://docs.google.com/document/d/1eyjFp3DXhrpLscngELocmXFwJ_Y8H9si6n8Z2SLADhg/edit). Note: It\u2019s mandatory to upload the certificate in a PDF format. Step 7: Once the KYC is uploaded, enter the Coinbase address and lock 10 million XDC tokens before running the Masternode. Step 8: The proposed node will be added to the Masternode randomly through the Round-Robin method. On successful addition to the Masternode, the reward will be sent to the assigned XinFin Wallet.","title":"Setup a Masternode with XinFin MainNet in 8 Simple Steps"},{"location":"get-started/Setupmn/#masternode-tools-and-public-community-channel","text":"Community Forum update link: Telegram Development Community: Slack Public Channel:","title":"Masternode Tools and Public Community Channel"},{"location":"get-started/XDC/","text":"Technicalities and Specifications of XinFin Delegated Proof of Stake XinFin Delegated Proof of Stake (XDPOS) is the fastest, most efficient, decentralized, and flexible consensus model available. XDPOS leverages the power of stakeholder to resolve consensus issues in a fair and democratic way. The Self KYC feature added in XinFin XDPoS is more enterprise and regulator friendly. Definitions XDPoS: XinFin Delegated Proof of Stake: a mechanism for the selection of network Validators by coin holders delegating their Validator: (usually denoted L) a node on the network responsible for producing and validating blocks. Nominator: a coin holder who stakes and delegates their coins to one or more Validators. Epoch: (usually denoted \ud835\udc41) corresponds to \ud835\udc3f\u2208\u2115 blocks: it is a cycle of a few blocks in which Validators create blocks in turn. Validators Registration \u00b6 Any network participant will be able to register as a Validator. A specified value REGISTRATION_VALUE (in the native token) will be sent to a registerfunction on the contract. It will be burnt in order to limit the number of participants. The validator is required to add KYC document at the time of staking XDC token. A hard limit to the total number of registered Validators MAX_REGISTERED_VALIDATORSshould be specified. Any Validator registering will have to wait for the beginning of epoch N+2(current epoch being N) to be eligible. A Validator\u2019s total stake must be greater than the MIN_TOTAL_STAKE in order for it to be eligible. The top validators(by a total stake) in a given epoch are chosen as the Active Validator Set: those Validators that produce blocks in the next epoch. KYC Compliance: We would like to add Know your customer (KYC) identification as it falls under the responsibility of financial institution and/or regulated company. Become a MasterNode and upload the Know Your Community (KYC) certificate in PDF format. This KYC certificate needs to be signed by one of the following personnel: Company Secretary, A Notary Public, Chartered Secretary, Consulate, or A lawyer with Seal. For INDIVIDUAL format, click here . For ORGANIZATION format, click here . Note: It\u2019s mandatory to upload the certificate in a PDF format. Validator needs to upload self KYC document and this document will be visible on the open public network Choosing Validators \u00b6 choose L Validators for a certain epoch N Fork Perversion, Malicious or Double Spends: \u00b6 To prevent fork, we add a feature to revalidate transaction. Every transaction will have 2 signatures. One signature will be by block creator and the other signature will be by block verifier (both separate validator). So the block verifier will check for malicious or double spends etc. Slashing \u00b6 In order for the network to be secure, misbehaviours must be detected and punished. Off-chain: Off-chain detection of misbehaviour is easier to implement and can be used for tricky misbehaviour detections. In the contract, there will be a reportBenign method (part of the Validator Set Contract) that only Validators can call, passing a message and a block-number, and a slashing will execute if more than 2/3 of the Validators agree on the misbehaviour. These might include but are not limited to: Validators consistently propagating blocks late __ Validators being offline for more than 24 hours. It could slash a portion of the stakes, eg. only 4% On-chain: A slashing condition that can be verified on-chain is that a Validator signed-off 2 blocks with the same step (equivocation). Anyone could call this reportMalicious method with the right data, being the two signatures of the Validator, and the message signed, which would contain the step of the blocks. This method would thus include an RLP decoder. We could also detect if a Validator hasn\u2019t signed any block for the past 256 blocks on-chain, by challenging the Validator to submit the block he signed along with the signature. However, only the last 256 block hashes are available in the EVM, so it might be limited in this context of around 1,000-blocks epochs. There may be other on-chain slashable conditions. Wrong KYC Detail Enter by Validator Node: In the contract, there will be a reportMalicious method that only Validators can call, passing a message and a block-number, and a slashing will execute if more than 2/3 of the Validators agree on the reportMalicious. It could slash a portion of the entire 100% stakes of Validator Node. Parameters \u00b6 Suggested parameter values from requirements: MIN_STAKE: 10,000,000 XDC VALIDATOR_REWARD: 10% xdc (Yearly) VALIDATOR_SET_SIZE: 18 REWARDS_TRANSFER: Every next block of an epoch WITHDRAWAL_PERIOD: Set of Epoch ( 1 Epoch = 900 blocks) MAX_REGISTERED_VALIDATORS: 5000 Upgradability: \u00b6 Contracts should be upgradeable, could be implemented with Proxy contracts. Contract state would need to be transferred to the new version of the contract, either through a migration process or a persistent storage pattern.","title":"XinFin DPOS Consensus"},{"location":"get-started/XDC/#validators-registration","text":"Any network participant will be able to register as a Validator. A specified value REGISTRATION_VALUE (in the native token) will be sent to a registerfunction on the contract. It will be burnt in order to limit the number of participants. The validator is required to add KYC document at the time of staking XDC token. A hard limit to the total number of registered Validators MAX_REGISTERED_VALIDATORSshould be specified. Any Validator registering will have to wait for the beginning of epoch N+2(current epoch being N) to be eligible. A Validator\u2019s total stake must be greater than the MIN_TOTAL_STAKE in order for it to be eligible. The top validators(by a total stake) in a given epoch are chosen as the Active Validator Set: those Validators that produce blocks in the next epoch. KYC Compliance: We would like to add Know your customer (KYC) identification as it falls under the responsibility of financial institution and/or regulated company. Become a MasterNode and upload the Know Your Community (KYC) certificate in PDF format. This KYC certificate needs to be signed by one of the following personnel: Company Secretary, A Notary Public, Chartered Secretary, Consulate, or A lawyer with Seal. For INDIVIDUAL format, click here . For ORGANIZATION format, click here . Note: It\u2019s mandatory to upload the certificate in a PDF format. Validator needs to upload self KYC document and this document will be visible on the open public network","title":"Validators Registration"},{"location":"get-started/XDC/#choosing-validators","text":"choose L Validators for a certain epoch N","title":"Choosing Validators"},{"location":"get-started/XDC/#fork-perversion-malicious-or-double-spends","text":"To prevent fork, we add a feature to revalidate transaction. Every transaction will have 2 signatures. One signature will be by block creator and the other signature will be by block verifier (both separate validator). So the block verifier will check for malicious or double spends etc.","title":"Fork Perversion, Malicious or Double Spends:"},{"location":"get-started/XDC/#slashing","text":"In order for the network to be secure, misbehaviours must be detected and punished. Off-chain: Off-chain detection of misbehaviour is easier to implement and can be used for tricky misbehaviour detections. In the contract, there will be a reportBenign method (part of the Validator Set Contract) that only Validators can call, passing a message and a block-number, and a slashing will execute if more than 2/3 of the Validators agree on the misbehaviour. These might include but are not limited to: Validators consistently propagating blocks late __ Validators being offline for more than 24 hours. It could slash a portion of the stakes, eg. only 4% On-chain: A slashing condition that can be verified on-chain is that a Validator signed-off 2 blocks with the same step (equivocation). Anyone could call this reportMalicious method with the right data, being the two signatures of the Validator, and the message signed, which would contain the step of the blocks. This method would thus include an RLP decoder. We could also detect if a Validator hasn\u2019t signed any block for the past 256 blocks on-chain, by challenging the Validator to submit the block he signed along with the signature. However, only the last 256 block hashes are available in the EVM, so it might be limited in this context of around 1,000-blocks epochs. There may be other on-chain slashable conditions. Wrong KYC Detail Enter by Validator Node: In the contract, there will be a reportMalicious method that only Validators can call, passing a message and a block-number, and a slashing will execute if more than 2/3 of the Validators agree on the reportMalicious. It could slash a portion of the entire 100% stakes of Validator Node.","title":"Slashing"},{"location":"get-started/XDC/#parameters","text":"Suggested parameter values from requirements: MIN_STAKE: 10,000,000 XDC VALIDATOR_REWARD: 10% xdc (Yearly) VALIDATOR_SET_SIZE: 18 REWARDS_TRANSFER: Every next block of an epoch WITHDRAWAL_PERIOD: Set of Epoch ( 1 Epoch = 900 blocks) MAX_REGISTERED_VALIDATORS: 5000","title":"Parameters"},{"location":"get-started/XDC/#upgradability","text":"Contracts should be upgradeable, could be implemented with Proxy contracts. Contract state would need to be transferred to the new version of the contract, either through a migration process or a persistent storage pattern.","title":"Upgradability:"},{"location":"get-started/cde/","text":"Create DAPP Environment Prerequisites The Network for Running the Contract Deploying and using contract will need to consume a certain amount of resource (memory, CPU, and storage etc.). Therefore, it is recommended that the developers tune and test their smart contracts on their private networks and confirm that the contract is available before deploying them on the TestNet or MainNet. Wallet Client: Wallet-cli is XDC Network\u2019s command-line wallet. Developers can use wallet-cli to post and deploy contracts on the MainNet as well as execute other operations. Smart Contract Development At this point, we recommend Remix as the coding environment for compiling and testing during the early stages. We present a simple example of contract code of data access to illustrate the process of compiling, deployment, and debugging. 1.Initiate the Private Chain: Make sure that the private chain in the prerequisite has been successfully deployed by checking if log message \u201cProduce block successfully\u201d of persistent block generation appears. 2.Develop Smart Contracts: Copy the code mentioned above to Remix to compile and debug. Make sure that logic of the code is correct, and the code itself is bug-free. 3.Compile in SimpleWebCompiler: The compiler of XDC is slightly different from that of Ethereum and is still integrating with Remix. Therefore, we are providing a temporary way of acquiring ABI and ByteCode instead of acquiring them directly from Remix. Copy the code above to SImpleWebCompiler and click the Compile button to attain ABI and ByteCode. 4.Deploy Smart Contract via Wallet-cli : Download Wallet-Cli and compile on it. Initiate Wallet-Cli Command to initiate the wallet-CLI After initiation, input the command interactively to the portal. Import the private key and inquire if the remaining balance is correct. Note: Developers can make the change in config.conf if they need to connect to a different node or interface. Contract Deployment A message of \u201cDeploy the contract successfully\u201d will be displayed upon the success of contract deployment **Acquiring addresses of the contracts ** Call the contracts to store and query data If the called function is constant or VIEW, wallet-cli will return the results directly.","title":"Create DAPP Environment"},{"location":"get-started/hdpwork/","text":"Understand Features and Attack Vectors of XDPoS XinFin Delegated Proof of Stake(XDPoS) is another form of Proof of Stake(PoS) consensus mechanism to scale up to Thousands of transactions per second. XDPOS concentrates block production in the hands of few semi-trusted entities in order to achieve more scalability than Proof of Work(PoW) or other Proof of Stake blockchains. Common Terms \u00b6 Nominator: A coin holder who stakes or delegates their coin to one or more validator. Validator: A semi-trusted entity responsible for validating and producing blocks. Epoch: A cycle of few blocks in which validator nodes create blocks in turn. In XinFin Delegated Proof of Stake (XDPoS) anyone can participate in Validator (Block Producer). Token holder are tallied after a specific time or after each epoch. Why XDPOS? \u00b6 Scalability Blocks can be propagated through the network much more efficiently. And blocks can be produced more consistently and reliably in a much shorter time frame. Moreover, finality can be reached as soon as \u2154 of the block producer has confirmed a transaction. 1.Network Infrastructure In XDPoS users have control over who will provide the infrastructure unlike PoW and PoS, where users have no choice on validators. In XDPoS, validators can be thought of as employees of users(nominators) and can be fired for not performing their duties. 2.Self-Funding Through Inflation In XDPoS, unlike PoS or PoW where miners getrewards for validating a block, inflation is used to pay block producers as well as to fund the development of platform itself. Attack Vectors \u00b6 Block Producers Collude The main problem this can cause is a delay in the transaction and double spends. Although these situations are highly unlikely. Conclusion \u00b6 XinFin Delegated Proof of Stake(XDPoS) is an elegant, robust and practically proven solution to the scalability issues of Blockchain. Although, XDPoS does compromise decentralization in some sense, and it is up to token holders to monitor the health of the system, watch for bad behaviour and decide upon what makes for sufficient decentralization. It still solves the scalability and safety issues in Blockchain. And, all in all if not everywhere XDPoS can still be used as a Layer 2 or Layer 3 security while keeping a PoW system as a security base layer. It will help us achieve decentralization, safety as well as scalability which is the most important issue of current blockchain networks.","title":"How DPOS Works?"},{"location":"get-started/hdpwork/#common-terms","text":"Nominator: A coin holder who stakes or delegates their coin to one or more validator. Validator: A semi-trusted entity responsible for validating and producing blocks. Epoch: A cycle of few blocks in which validator nodes create blocks in turn. In XinFin Delegated Proof of Stake (XDPoS) anyone can participate in Validator (Block Producer). Token holder are tallied after a specific time or after each epoch.","title":"Common Terms"},{"location":"get-started/hdpwork/#why-xdpos","text":"Scalability Blocks can be propagated through the network much more efficiently. And blocks can be produced more consistently and reliably in a much shorter time frame. Moreover, finality can be reached as soon as \u2154 of the block producer has confirmed a transaction. 1.Network Infrastructure In XDPoS users have control over who will provide the infrastructure unlike PoW and PoS, where users have no choice on validators. In XDPoS, validators can be thought of as employees of users(nominators) and can be fired for not performing their duties. 2.Self-Funding Through Inflation In XDPoS, unlike PoS or PoW where miners getrewards for validating a block, inflation is used to pay block producers as well as to fund the development of platform itself.","title":"Why XDPOS?"},{"location":"get-started/hdpwork/#attack-vectors","text":"Block Producers Collude The main problem this can cause is a delay in the transaction and double spends. Although these situations are highly unlikely.","title":"Attack Vectors"},{"location":"get-started/hdpwork/#conclusion","text":"XinFin Delegated Proof of Stake(XDPoS) is an elegant, robust and practically proven solution to the scalability issues of Blockchain. Although, XDPoS does compromise decentralization in some sense, and it is up to token holders to monitor the health of the system, watch for bad behaviour and decide upon what makes for sufficient decentralization. It still solves the scalability and safety issues in Blockchain. And, all in all if not everywhere XDPoS can still be used as a Layer 2 or Layer 3 security while keeping a PoW system as a security base layer. It will help us achieve decentralization, safety as well as scalability which is the most important issue of current blockchain networks.","title":"Conclusion"},{"location":"get-started/hybblock/","text":"HYBRID BLOCKCHAIN The hybrid blockchain is best defined as the blockchain that attempts to use the best part of both private and public blockchain solutions. In an ideal world, a hybrid blockchain will mean controlled access and freedom at the same time. The hybrid blockchain is distinguishable from the fact that they are not open to everyone, but still offers blockchain features such as integrity, transparency, and security. As usual, Hybrid blockchain is entirely customizable. The members of the hybrid blockchain can decide who can take participation in the blockchain or which transactions are made public. This brings the best of both worlds and ensures that a company can work with their stakeholders in the best possible way. Benifits: \u00b6 Works in a closed ecosystem: The number one advantage of hybrid blockchain is its ability to work in a closed ecosystem. That means that companies or organizations don\u2019t have to worry about getting their information leaked when taking advantage of blockchain technology. Changes the rules when needed: Companies thrive on change. The good news about hybrid blockchain is that they need to change rules. However, the nature of the change depends on what the hybrid blockchain is trying to do. However, don\u2019t expect to change data or modify transactions in a hybrid system that handles land registry or user identity for verification purposes. Protecting from 51% attack: Hybrid blockchain are immune to a 51% attack as hackers cannot have access to the network to carry out the attack. Protecting privacy while still communicating with the outer world: Even though private blockchain is best for privacy-related issues. However, they are limited when it comes to communicating with the outer world. Many companies may want to keep privacy, but also need to configure their blockchain so that they can communicate with all their shareholders including the public. Low transaction cost: Another added benefit of using hybrid blockchain is to have a low transaction cost. Transactions are bound to be cheap as it requires few nodes to verify them. The most powerful nodes in the network make it easy to verify the transaction which may take thousands of nodes in public blockchain. The transaction fees can reduce to even 0.01$ per transaction.","title":"Hybrid Blockchain"},{"location":"get-started/hybblock/#benifits","text":"Works in a closed ecosystem: The number one advantage of hybrid blockchain is its ability to work in a closed ecosystem. That means that companies or organizations don\u2019t have to worry about getting their information leaked when taking advantage of blockchain technology. Changes the rules when needed: Companies thrive on change. The good news about hybrid blockchain is that they need to change rules. However, the nature of the change depends on what the hybrid blockchain is trying to do. However, don\u2019t expect to change data or modify transactions in a hybrid system that handles land registry or user identity for verification purposes. Protecting from 51% attack: Hybrid blockchain are immune to a 51% attack as hackers cannot have access to the network to carry out the attack. Protecting privacy while still communicating with the outer world: Even though private blockchain is best for privacy-related issues. However, they are limited when it comes to communicating with the outer world. Many companies may want to keep privacy, but also need to configure their blockchain so that they can communicate with all their shareholders including the public. Low transaction cost: Another added benefit of using hybrid blockchain is to have a low transaction cost. Transactions are bound to be cheap as it requires few nodes to verify them. The most powerful nodes in the network make it easy to verify the transaction which may take thousands of nodes in public blockchain. The transaction fees can reduce to even 0.01$ per transaction.","title":"Benifits:"},{"location":"get-started/hybnet/","text":"XinFin Private (QuorumFork) \u00b6 Prerequisite Operating System: Ubuntu 16.04 64-bit or higher Tools: Docker, Docker Compose Hardware: CPU : 24 RAM : 08GB HDD : 500GB Network Ports Following network ports need to be open for the nodes to communicate 21001-2100* TCP/UDP GETH 22001-2200* TCP RPC 23001-2300* TCP RAFT 9001-900* TCP Constellation *-auto-increment depending on number of nodes Clone repository git clone https://github.com/XinFinorg/XDC01-docker-Nnodes.git Step: 1 Install docker & docker-compose sudo ./install_docker.sh Step: 2 Pull image from Docker Hub sudo docker pull xinfinorg/quorum:v2.1.0 Step: 3 Launch the setup script cd static-nodes sudo ./setup.sh Enter number of nodes, private IP of host machine & unique docker subnet. You can view private IP of your machine using ifconfig. To Check private IP address(internal (network) IP address) on Ubuntu GUI: 1.Open the Activities overview and start typing Network. 2.Click on Network to open the panel. 3.Choose which connection, Wi-Fi or Wired, from the left pane. 4.The IP address for a wired connection will be displayed on the right. 5. Click the settings button to see the IP address for the wireless network in the Details panel. sudo docker-compose -p (Replace with your project name) up -d Accessing console sudo docker exec -it PROJECT_NAME_STATIC_NODES_node_1_1 geth attach /qdata/dd/geth.ipc Stopping the network sudo docker-compose -p (Replace with your project name) down Adding a new node to the existing network Install docker & pull image on the new host machine as done earlier in Step 1 & 2 cd dynamic-node sudo ./setup.sh Enter the public IP of the new host machine (private IP in case of local setup, assigned by router) Enter the node number (e.g. if you have 3 nodes up with the initial setup then node number here would be 4) Copy enodeID from enode-url.json then attach to geth console of any running node & execute raft.addPeer(enodeID) Start the new node cd dynamic-node sudo docker-compose -p up -d Upgrade Network Pull newer version of image from docker hub sudo docker pull xinfinorg/quorum:v2.x.x Stop containers running old version sudo docker-compose -p down Update docker-compose.yml to use new image (specify quorum:TAG_NAME as argument) sudo ./update_quorum.sh quorum:v2.x.x Run new version sudo docker-compose -p up -d Corda \u00b6 A Corda network consists of a number of machines running nodes. These nodes communicate using persistent protocols in order to create and validate transactions. There are three broader categories of functionality one such node may have. These pieces of functionality are provided as services, and one node may run several of them. Notary: Nodes running a notary service witness state spends and have the final say in whether a transaction is a double-spend or not Oracle: Network services that link the ledger to the outside world by providing facts that affect the validity of transactions Regular node: All nodes have a vault and may start protocols communicating with other nodes, notaries and oracles and evolve their private ledger Setting up your own network Certificates Every node in a given Corda network must have an identity certificate signed by the network\u2019s root CA. See Network permissioning for more information. Configuration A node can be configured by adding/editing node.conf in the node\u2019s directory. For details see Node configuration. An example configuration: myLegalName : \"O=Bank A,L=London,C=GB\" keyStorePassword : \"cordacadevpass\" trustStorePassword : \"trustpass\" dataSourceProperties : { dataSourceClassName : org.h2.jdbcx.JdbcDataSource \"dataSource.url\" : \"jdbc:h2:file:\"${baseDirectory}\"/persistence\" \"dataSource.user\" : sa \"dataSource.password\" : \"\"} p2pAddress : \"my-corda-node:10002\" rpcSettings = { useSsl = false standAloneBroker = false address : \"my-corda-node:10003\" adminAddress : \"my-corda-node:10004\" } webAddress : \"localhost:10004\" rpcUsers : [ { username=user1, password=letmein, permissions=[ StartFlow.net.corda.protocols.CashProtocol ] } ] devMode : true // certificateSigningService : \"https://testnet.certificate.corda.net\" The most important fields regarding network configuration are: p2pAddress: This specifies a host and port to which Artemis will bind for messaging with other nodes. Note that the address bound will NOT be my-corda-node, but rather :: (all addresses on all network interfaces). The hostname specified is the hostname that must be externally resolvable by other nodes in the network . In the above configuration this is the resolvable name of a machine in a VPN. rpcAddress: The address to which Artemis will bind for RPC calls. webAddress: The address the webserver should bind. Note that the port must be distinct from that of p2pAddress and rpcAddress if they are on the same machine. Bootstrapping the network The nodes see each other using the network map. This is a collection of statically signed node-info files, one for each node in the network. Most production deployments will use a highly available, secure distribution of the network map via HTTP. For test deployments where the nodes (at least initially) reside on the same filesystem, these node-info files can be placed directly in the node\u2019s additional-node-infos directory from where the node will pick them up and store them in its local network map cache. The node generates its own node-info file on startup. In addition to the network map, all the nodes on a network must use the same set of network parameters. These are a set of constants which guarantee interoperability between nodes. The HTTP network map distributes the network parameters which the node downloads automatically. In the absence of this the network parameters must be generated locally. This can be done with the network bootstrapper. This is a tool that scans all the node configurations from a common directory to generate the network parameters file which is copied to the nodes\u2019 directories. It also copies each node\u2019s node-info file to every other node so that they can all transact with each other. The bootstrapper tool can be built with the command: gradlew buildBootstrapperJar The resulting jar can be found in tools/bootstrapper/build/libs/ To use it, create a directory containing a node.conf file for each node you want to create. Then run the following command: java -jar network-bootstrapper.jar <nodes-root-dir For example running the command on a directory containing these files : . +-- notary.conf // The notary's node.conf file +-- partya.conf // Party A's node.conf file +-- partyb.conf // Party B's node.conf file Would generate directories containing three nodes: notary, partya and partyb. This tool only bootstraps a network. It cannot dynamically update if a new node needs to join the network or if an existing one has changed something in their node-info, e.g. their P2P address. For this the new node-info file will need to be placed in the other nodes\u2019 additional-node-infos directory. A simple way to do this is to use rsync. However, if it\u2019s known beforehand the set of nodes that will eventually the node folders can be pregenerated in the bootstrap and only started when needed. Whitelisting Contracts If you want to create a Zone whitelist (see API: Contract Constraints), you can pass in a list of CorDapp jars: `java -jar network-bootstrapper.jar The CorDapp jars will be hashed and scanned for Contract classes. By default the tool would generate a file named whitelist.txt containing an entry for each contract with the hash of the jar. For example: net.corda.finance.contracts.asset.Obligation:decd098666b9657314870e192ced0c3519c2c9d395507a238338f8d003929de8 net.corda.finance.contracts.asset.Cash:decd098666b9657314870e192ced0c3519c2c9d395507a238338f8d003929de9 These will be added to the NetworkParameters.whitelistedContractImplementations. See Network Map. This means that by default the Network bootstrapper tool will whitelist all contracts found in all passed CorDapps. In case there is a whitelist.txt file in the root dir already, the tool will append the new jar hashes or contracts to it. The zone operator will maintain this whitelist file, and, using the tool, will append new versions of CorDapps to it. Warning The zone operator must ensure that this file is append only. If the operator removes hashes from the list, all transactions pointing to that version will suddenly fail the constraint verification, and the entire chain is compromised. If a contract is removed from the whitelist, then all states created from that moment on will be constrained by the HashAttachmentConstraint. Note: In future releases, we will provider a tamper-proof way of maintaining the contract whitelist. For fine-grained control of constraints, in case multiple contracts live in the same jar, the tool reads from another file:exclude_whitelist.txt, which contains a list of contracts that should not be whitelisted, and thus default to the very restrictive: HashAttachmentConstraint For example: net.corda.finance.contracts.asset.Cash net.corda.finance.contracts.asset.CommercialPaper Starting the nodes You may now start the nodes in any order. You should see a banner, some log lines and eventually Node started up and registered, indicating that the node is fully started. In terms of process management there is no prescribed method. You may start the jars by hand or perhaps use systemd and friends. Logging Only a handful of important lines are printed to the console. For details/diagnosing problems check the logs. Logging is standard log4j2 and may be configured accordingly. Logs are by default redirected to files in NODE_DIRECTORY/logs/. Connecting to the nodes Once a node has started up successfully you may connect to it as a client to initiate protocols/query state etc. Depending on your network setup you may need to tunnel to do this remotely. See the Using the client RPC API on how to establish an RPC link. Sidenote: A client is always associated with a single node with a single identity, which only sees their part of the ledger.","title":"Build with XinFin Hybrid Network"},{"location":"get-started/hybnet/#xinfin-private-quorumfork","text":"Prerequisite Operating System: Ubuntu 16.04 64-bit or higher Tools: Docker, Docker Compose Hardware: CPU : 24 RAM : 08GB HDD : 500GB Network Ports Following network ports need to be open for the nodes to communicate 21001-2100* TCP/UDP GETH 22001-2200* TCP RPC 23001-2300* TCP RAFT 9001-900* TCP Constellation *-auto-increment depending on number of nodes Clone repository git clone https://github.com/XinFinorg/XDC01-docker-Nnodes.git Step: 1 Install docker & docker-compose sudo ./install_docker.sh Step: 2 Pull image from Docker Hub sudo docker pull xinfinorg/quorum:v2.1.0 Step: 3 Launch the setup script cd static-nodes sudo ./setup.sh Enter number of nodes, private IP of host machine & unique docker subnet. You can view private IP of your machine using ifconfig. To Check private IP address(internal (network) IP address) on Ubuntu GUI: 1.Open the Activities overview and start typing Network. 2.Click on Network to open the panel. 3.Choose which connection, Wi-Fi or Wired, from the left pane. 4.The IP address for a wired connection will be displayed on the right. 5. Click the settings button to see the IP address for the wireless network in the Details panel. sudo docker-compose -p (Replace with your project name) up -d Accessing console sudo docker exec -it PROJECT_NAME_STATIC_NODES_node_1_1 geth attach /qdata/dd/geth.ipc Stopping the network sudo docker-compose -p (Replace with your project name) down Adding a new node to the existing network Install docker & pull image on the new host machine as done earlier in Step 1 & 2 cd dynamic-node sudo ./setup.sh Enter the public IP of the new host machine (private IP in case of local setup, assigned by router) Enter the node number (e.g. if you have 3 nodes up with the initial setup then node number here would be 4) Copy enodeID from enode-url.json then attach to geth console of any running node & execute raft.addPeer(enodeID) Start the new node cd dynamic-node sudo docker-compose -p up -d Upgrade Network Pull newer version of image from docker hub sudo docker pull xinfinorg/quorum:v2.x.x Stop containers running old version sudo docker-compose -p down Update docker-compose.yml to use new image (specify quorum:TAG_NAME as argument) sudo ./update_quorum.sh quorum:v2.x.x Run new version sudo docker-compose -p up -d","title":"XinFin Private (QuorumFork)"},{"location":"get-started/hybnet/#corda","text":"A Corda network consists of a number of machines running nodes. These nodes communicate using persistent protocols in order to create and validate transactions. There are three broader categories of functionality one such node may have. These pieces of functionality are provided as services, and one node may run several of them. Notary: Nodes running a notary service witness state spends and have the final say in whether a transaction is a double-spend or not Oracle: Network services that link the ledger to the outside world by providing facts that affect the validity of transactions Regular node: All nodes have a vault and may start protocols communicating with other nodes, notaries and oracles and evolve their private ledger Setting up your own network Certificates Every node in a given Corda network must have an identity certificate signed by the network\u2019s root CA. See Network permissioning for more information. Configuration A node can be configured by adding/editing node.conf in the node\u2019s directory. For details see Node configuration. An example configuration: myLegalName : \"O=Bank A,L=London,C=GB\" keyStorePassword : \"cordacadevpass\" trustStorePassword : \"trustpass\" dataSourceProperties : { dataSourceClassName : org.h2.jdbcx.JdbcDataSource \"dataSource.url\" : \"jdbc:h2:file:\"${baseDirectory}\"/persistence\" \"dataSource.user\" : sa \"dataSource.password\" : \"\"} p2pAddress : \"my-corda-node:10002\" rpcSettings = { useSsl = false standAloneBroker = false address : \"my-corda-node:10003\" adminAddress : \"my-corda-node:10004\" } webAddress : \"localhost:10004\" rpcUsers : [ { username=user1, password=letmein, permissions=[ StartFlow.net.corda.protocols.CashProtocol ] } ] devMode : true // certificateSigningService : \"https://testnet.certificate.corda.net\" The most important fields regarding network configuration are: p2pAddress: This specifies a host and port to which Artemis will bind for messaging with other nodes. Note that the address bound will NOT be my-corda-node, but rather :: (all addresses on all network interfaces). The hostname specified is the hostname that must be externally resolvable by other nodes in the network . In the above configuration this is the resolvable name of a machine in a VPN. rpcAddress: The address to which Artemis will bind for RPC calls. webAddress: The address the webserver should bind. Note that the port must be distinct from that of p2pAddress and rpcAddress if they are on the same machine. Bootstrapping the network The nodes see each other using the network map. This is a collection of statically signed node-info files, one for each node in the network. Most production deployments will use a highly available, secure distribution of the network map via HTTP. For test deployments where the nodes (at least initially) reside on the same filesystem, these node-info files can be placed directly in the node\u2019s additional-node-infos directory from where the node will pick them up and store them in its local network map cache. The node generates its own node-info file on startup. In addition to the network map, all the nodes on a network must use the same set of network parameters. These are a set of constants which guarantee interoperability between nodes. The HTTP network map distributes the network parameters which the node downloads automatically. In the absence of this the network parameters must be generated locally. This can be done with the network bootstrapper. This is a tool that scans all the node configurations from a common directory to generate the network parameters file which is copied to the nodes\u2019 directories. It also copies each node\u2019s node-info file to every other node so that they can all transact with each other. The bootstrapper tool can be built with the command: gradlew buildBootstrapperJar The resulting jar can be found in tools/bootstrapper/build/libs/ To use it, create a directory containing a node.conf file for each node you want to create. Then run the following command: java -jar network-bootstrapper.jar <nodes-root-dir For example running the command on a directory containing these files : . +-- notary.conf // The notary's node.conf file +-- partya.conf // Party A's node.conf file +-- partyb.conf // Party B's node.conf file Would generate directories containing three nodes: notary, partya and partyb. This tool only bootstraps a network. It cannot dynamically update if a new node needs to join the network or if an existing one has changed something in their node-info, e.g. their P2P address. For this the new node-info file will need to be placed in the other nodes\u2019 additional-node-infos directory. A simple way to do this is to use rsync. However, if it\u2019s known beforehand the set of nodes that will eventually the node folders can be pregenerated in the bootstrap and only started when needed. Whitelisting Contracts If you want to create a Zone whitelist (see API: Contract Constraints), you can pass in a list of CorDapp jars: `java -jar network-bootstrapper.jar The CorDapp jars will be hashed and scanned for Contract classes. By default the tool would generate a file named whitelist.txt containing an entry for each contract with the hash of the jar. For example: net.corda.finance.contracts.asset.Obligation:decd098666b9657314870e192ced0c3519c2c9d395507a238338f8d003929de8 net.corda.finance.contracts.asset.Cash:decd098666b9657314870e192ced0c3519c2c9d395507a238338f8d003929de9 These will be added to the NetworkParameters.whitelistedContractImplementations. See Network Map. This means that by default the Network bootstrapper tool will whitelist all contracts found in all passed CorDapps. In case there is a whitelist.txt file in the root dir already, the tool will append the new jar hashes or contracts to it. The zone operator will maintain this whitelist file, and, using the tool, will append new versions of CorDapps to it. Warning The zone operator must ensure that this file is append only. If the operator removes hashes from the list, all transactions pointing to that version will suddenly fail the constraint verification, and the entire chain is compromised. If a contract is removed from the whitelist, then all states created from that moment on will be constrained by the HashAttachmentConstraint. Note: In future releases, we will provider a tamper-proof way of maintaining the contract whitelist. For fine-grained control of constraints, in case multiple contracts live in the same jar, the tool reads from another file:exclude_whitelist.txt, which contains a list of contracts that should not be whitelisted, and thus default to the very restrictive: HashAttachmentConstraint For example: net.corda.finance.contracts.asset.Cash net.corda.finance.contracts.asset.CommercialPaper Starting the nodes You may now start the nodes in any order. You should see a banner, some log lines and eventually Node started up and registered, indicating that the node is fully started. In terms of process management there is no prescribed method. You may start the jars by hand or perhaps use systemd and friends. Logging Only a handful of important lines are printed to the console. For details/diagnosing problems check the logs. Logging is standard log4j2 and may be configured accordingly. Logs are by default redirected to files in NODE_DIRECTORY/logs/. Connecting to the nodes Once a node has started up successfully you may connect to it as a client to initiate protocols/query state etc. Depending on your network setup you may need to tunnel to do this remotely. See the Using the client RPC API on how to establish an RPC link. Sidenote: A client is always associated with a single node with a single identity, which only sees their part of the ledger.","title":"Corda"},{"location":"get-started/lyl/","text":"How to set up loyalty token on XinFin.Network Step 1 : Create and Deploy Loyalty Smart Contract and Deploy on Public network. Goto: https://mycontract.co/ and create Loyalty Token (Token Contract) After Entering Detail like: Token Name, Token Symbol and Total Token Supply. Note: After Creating Token Contract then Deploy to XinFin Network and Download Private Key and store at safe place Without a doubt, the safest way to store any Private Key is using a paper wallet. Step 2 : Setup XinFin Full node to get Full control over your Privaye key and Data backup. Follow step and setup XinFin Full Node :- https://github.com/XinFinOrg/XinFin-Node Step 3 : Install Dependencies. Download Nodejs and npm if you don't have them Install dependencies: npm install xdc3@1.0.0-beta.41 Step 4 : Dowlonad Ready Script File, Learn API Command to Manage Loyalty Loken with your ERP/CRM System: e.g. node Token_Transfer.js RPC_IP RPC_Port from_address to_address amount contract_address private_key decimals Execute XRC20 Transfer : node Token_Transfer.js testnet.xinfin.network 443 xdcD000ea0B094EB93Bf4a545994048e630DFef922d xdca5b6045297fc6aec660a2769e3bad08acb2098b3 1000 xdc880997e0a6de5671e8fc9e7b5424cd07b51c9ab8 c3d09a56285d70a531128cec7eb5ae905070f17705d2e1d112eaafd7d257f29b 18 //to execute the script run the following command // node file_name.js wallet_ip port from_address to_address amount contract_address private_key decimals //ip and port for the blockchain node to be connected var wallet_ip = process.argv[2]; var wallet_port = process.argv[3]; //address from which tokens need to be sent var from_address = process.argv[4]; //address to which tokens need to be sent var to_address = process.argv[5]; //amount of tokens to be sent var sendamount = process.argv[6]; //contract address of the ERC20 token var coinAddress = process.argv[7]; //private key of the from address var private_key = process.argv[8]; //predefined no. of decimals in the contract var tokendecimal = process.argv[9]; //web3 library needed const Web3 = require(\"xdc3\"); //connecting to the web3 provider if (typeof web3 !== \"undefined\") { web3 = new Web3(web3.currentProvider); } else { web3 = new Web3( new Web3.providers.HttpProvider(\"http://\" + wallet_ip + \":\" + wallet_port) ); } //if the token decimal isn't specified then set it to default 18 and converting the amount to decimal form if (tokendecimal == 18 || tokendecimal == null) { var send_amount = web3.utils.toWei(sendamount); } else { var send_amount = sendamount * Math.pow(10, tokendecimal); } //data required for estimating the gas that will be needed for the transaction to complete var est_main_gas = { from: from_address, to: to_address, value: send_amount }; //standard ERC20 contract ABI const coinabi = [ { constant: true, inputs: [], name: \"name\", outputs: [{ name: \"\", type: \"string\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: false, inputs: [ { name: \"_spender\", type: \"address\" }, { name: \"_value\", type: \"uint256\" } ], name: \"approve\", outputs: [{ name: \"success\", type: \"bool\" }], payable: false, stateMutability: \"nonpayable\", type: \"function\" }, { constant: true, inputs: [], name: \"totalSupply\", outputs: [{ name: \"\", type: \"uint256\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: false, inputs: [ { name: \"_from\", type: \"address\" }, { name: \"_to\", type: \"address\" }, { name: \"_value\", type: \"uint256\" } ], name: \"transferFrom\", outputs: [{ name: \"success\", type: \"bool\" }], payable: false, stateMutability: \"nonpayable\", type: \"function\" }, { constant: true, inputs: [], name: \"decimals\", outputs: [{ name: \"\", type: \"uint256\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: true, inputs: [{ name: \"_owner\", type: \"address\" }], name: \"balanceOf\", outputs: [{ name: \"balance\", type: \"uint256\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: true, inputs: [], name: \"owner\", outputs: [{ name: \"\", type: \"address\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: true, inputs: [], name: \"symbol\", outputs: [{ name: \"\", type: \"string\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: false, inputs: [ { name: \"_to\", type: \"address\" }, { name: \"_value\", type: \"uint256\" } ], name: \"transfer\", outputs: [{ name: \"success\", type: \"bool\" }], payable: false, stateMutability: \"nonpayable\", type: \"function\" }, { constant: true, inputs: [ { name: \"_owner\", type: \"address\" }, { name: \"_spender\", type: \"address\" } ], name: \"allowance\", outputs: [{ name: \"remaining\", type: \"uint256\" }], payable: false, stateMutability: \"view\", type: \"function\" }, { constant: false, inputs: [{ name: \"_newOwner\", type: \"address\" }], name: \"transferOwnership\", outputs: [], payable: false, stateMutability: \"nonpayable\", type: \"function\" }, { inputs: [], payable: false, stateMutability: \"nonpayable\", type: \"constructor\" }, { anonymous: false, inputs: [ { indexed: true, name: \"from\", type: \"address\" }, { indexed: true, name: \"to\", type: \"address\" }, { indexed: false, name: \"value\", type: \"uint256\" } ], name: \"Transfer\", type: \"event\" }, { anonymous: false, inputs: [ { indexed: true, name: \"owner\", type: \"address\" }, { indexed: true, name: \"spender\", type: \"address\" }, { indexed: false, name: \"value\", type: \"uint256\" } ], name: \"Approval\", type: \"event\" } ]; //creating an instance of the ERC20 contract const coin = new web3.eth.Contract(coinabi, coinAddress); //checking the balance of the from address to asure that it has sufficient balance to complete the transaction coin.methods.balanceOf(from_address).call(function(err, bal) { bal = web3.utils.fromWei(bal, \"wei\").toString(10); //generating the data for the transfer method of the ERC20 contract const txdata = coin.methods.transfer(to_address, send_amount).encodeABI(); //to adress //estimating the gas required for the transaction to be completed web3.eth.estimateGas(est_main_gas, function(gaslimit_err, gaslimit) { //getting the current gas price on the network or else setting it to minimum 4 Gwei so that it won't take much time to execute web3.eth.getGasPrice(function(gas_err, getGasPrice) { if (gas_err) { console.log(JSON.stringify({ error1: gas_err })); getGasPrice = 4000000000; } else { if (getGasPrice < 4000000000 || getGasPrice == null) { getGasPrice = 4000000000; } } //finding the nonce for the from address web3.eth.getTransactionCount(from_address, function( tx_count_err, transactionCount ) { if (tx_count_err) { console.log( JSON.stringify({ \"transaction count error \": tx_count_err }) ); } //generating the transaction data const trans_det = { nonce: transactionCount, // Replace by nonce for your account on geth node gasPrice: getGasPrice, gas: \"200000\", to: coinAddress, //contract address from: from_address, //coin base data: txdata }; //signing the transaction generated to get a raw transaction web3.eth.accounts.signTransaction(trans_det, private_key, function( sign_error, signedTransaction ) { if (sign_error) { console.log( JSON.stringify({ \"sign transaction error \": sign_error }) ); } //raw transaction to be sent to the network. const rawTransaction = signedTransaction.rawTransaction; //sending the raw transaction after converting it in to hex format web3.eth.sendSignedTransaction( rawTransaction.toString(\"hex\"), function(trans_err, txid) { //printing the transaction hash or error if (trans_err) console.log(JSON.stringify({ \"transaction error\": trans_err })); if (txid && txid != \"\") console.log(JSON.stringify({ tx: txid, hash: txid })); } ); }); }); }); }); }); Other Useful Command eth.estimateGas eth.getGasPrice eth.getTransactionCount eth.accounts.signTransaction eth.sendSignedTransaction Ref Link: https://github.com/ethereum/wiki/wiki/JavaScript-API Note: XinFin Network Replace Address start from OX to XDC Troubleshooting Public discussions on the technical issues. Please Join Below mention Public Chat or Group. Slack Public Chat , Telegram Chat , Forum","title":"Set up Loyalty Token on XinFin.Network"},{"location":"get-started/productoverview/","text":"This page will provide users with an overview of XinFin Network's product map and how to read the documentation site, depending on readers' interest. The backbone of XinFin Network's products and ecosystem is the XinFin Network blockchain with its innovative XDPOS consensus. To facilitate interactions between users (including masternode owners) and the XinFin Network blockchain, a set of products have been built, including XinFin Explorer, XinFin Masternode, XinFin Wallet, and our Network stats page. XinFin Network has been also developing a decentralized exchange protocol with its relayer-based architecture. These products will be continuously improved in our long-term plan. Furthermore, more highly innovative products and technologies will be intensively developed and researched to make XinFin Network become an ideal platform for blockchain games, open finance, and enterprise-oriented applications. XinFin Network : XinFin Network is the backbone public blockchain of XinFin Network's product map. XinFin Explorer : XinFin Explorer provides a user friendly, details and perfection-oriented user interface for XinFin Network block explorer. From a user perspective, XinfinScan brings XinFin Network\u2019s transparency to users, because all block, transaction, finality, smart contracts, dApp and token information are read from XinFin Network and shown to users. Furthermore, Xinfin Explorer also offers technical visualisations and does useful statistics about the XinFin Network performance, token holders and other functionalities. XinFin Masternode : The Governance dApp - Xinfin Masternode, provides a professional UI that allows to see the list of masternodes and candidates, to deposit 10,000,000 XDC to become a masternode candidate, for performance statistics. XinFin Android Wallet : XinFIn Wallet is the official mobile wallet for XinFin Network, aiming to store the XDC native coin and tokens issued on XinFin Network. Alpha-Ex : Alpha-Ex is a decentralized cryptocurrency exchange directly integrated into the core layer of the XinFin Network blockchain. Decentralized exchanges called relayers built following the Alpha Ex standard will all interact with Alpha Ex.","title":"Products overview"},{"location":"get-started/smartcont/","text":"Introduction A blockchain is a growing list of records, called blocks, which are linked using cryptography. Each block contains a cryptographic hash of the previous block, a timestamp, and transaction data. By design, a blockchain is resistant to modification of the data. One of the best things about the blockchain is since it is a decentralized system that exists between all permitted parties, there is no need to pay intermediaries (Middlemen) and it saves you time and conflicts. Blockchains have their problems, but they are rated, undeniably, faster, cheaper, and more secure than traditional systems, which is why banks and governments are turning to them. Imagine if there were some self-executing contracts, in which contracts would be converted to computer code, stored and replicated on the system and supervised by the network of computers that run the blockchain. All of this is what makes up smart contracts. What are Smart Contracts?: \u00b6 A smart contract is a computer code running on top of a blockchain containing a set of rules under which the parties to that smart contract agree to interact with each other. If and when the predefined rules are met, the agreement is automatically enforced. The smart contract code facilitates, verifies, and enforces the negotiation or performance of an agreement or transaction. It is the simplest form of decentralized automation. In simpler words, it is rather a form of exchange of any type like money, property etc in a conflict-free way without the services of a middleman so it is trustless execution which is an important feature that smart contracts promises. Bitcoin was the first to support basic smart contracts in the sense that the network can transfer value from one person to another. The network of nodes will only validate transactions if certain conditions are met. Here is an example of a simple smart contract where we use simple set and get function then we increment and decrement some data. Features of Smart Contract \u00b6 Various features provided by smart contracts are: 1.Trust \u2014 Your documents are encrypted on a shared ledger. There\u2019s no way that someone can say they lost it. Smart contracts allow parties to commit and bind by the conditions and rules written inside it. 2.Transparency: Everything is written inside a smart contract with intricate details so anyone can read the details before agreeing and thus eliminates the chance of future disputes. There is no miscommunication as all the information is open with everybody. 3. Autonomous: You\u2019re the one making the agreement; there\u2019s no need to rely on a broker, lawyer or other intermediaries to confirm. This also knocks out the danger of manipulation by a third party, since execution is managed automatically by the network. 4.Accuracy: Automated contracts are not only faster and cheaper but also avoid the errors that come from a person making the contract who can miss some conditions but in smart contracts, it will result in an error, therefore, all the conditions are put in a detailed form. 5.Speed: If anyone would read documents or contracts manually it would take a chunk of time, whereas smart contracts are a bunch of code used to automate task and hence save hours of time. 6.Savings: Smart contracts can help to save a lot of money as it removes the presence of an intermediary. For instance, you would pay a lawyer for your case but in smart contracts, it\u2019s all in your hand as the code is the law. 7.Safety: Cryptographically encryption keeps your data safe. Since they match the highest safety standards, the level of protection involved in them allows to be secure to use for critical processes Problem Solution \u00b6 1.We can solve some of the problems with smart contracts like upgrade problems by using modular smart contracts. So, we can have modular.sol files while building on Ethereum that can be easily upgraded without losing information. 2.Using Delegatecall-based proxies for contract upgrading. In delegatecall logic data are kept in separate contracts, but the data contract (the proxy) calls the logic contract through delegatecall. It is difficult to apply the delegatecall-based proxy pattern correctly. The proxy pattern requires that memory layouts stay consistent between contract and compiler upgrades. A developer unfamiliar with EVM internals can easily introduce critical bugs during an upgrade. 3.The legal issues of smart contracts can only be solved over time as they are in their initial development stage; it will require time. 4.The major problem of writing smart contracts can be solved by not implementing Turing-complete smart contracts. 5.And, the oracle problem can be solved maybe by a consensus protocol in the community itself which will help to see how things are in the physical world. Application of Smart Contracts \u00b6 1.Digital Identity: Smart contracts allow users to own and control their digital identity i.ie data, reputation and assets. It provides enterprises with the opportunity to seamlessly know their customers while individuals may not disclose sensitive data which reduces the frictionless know-your-customer requirements. 2.Financial Data Recording: Financial organizations can utilize smart contracts for accurate, transparent financial data recording. Smart contracts allow for uniform financial data across organizations, improving financial reporting and reducing auditing costs.By improving data integrity, smart contracts support increased market stability. They also reduce accounting costs by allowing cost sharing among organizations. 3.Healthcare: Personal health records could be encoded and stored on the blockchain with a private key which would grant access only to specific individuals. The same strategy could be used to ensure that research is conducted via HIPAA laws (in a secure and confidential way). Receipts of surgeries could be stored on a blockchain and automatically sent to insurance providers as proof-of-delivery. The ledger, too, could be used for general healthcare management, such as supervising drugs, regulation compliance, testing results, and managing healthcare supplies. 4.Real Estate: You can get more money through smart contracts. Ordinarily, if you wanted to rent your apartment to someone, you\u2019d need to pay a middleman such as Craigslist or a newspaper to advertise and then again you\u2019d need to pay someone to confirm that the person paid rent and followed through. The ledger cuts your costs. All you do is pay via bitcoin and encode your contract on the ledger. Conclusion \u00b6 Smart contracts do offer a lot and have shown signs of how promising they can be, but they are still in their initial stages so with time maybe we will see their actual potential which could provide for all sorts of social changes which is really exciting. A big problem lies with the organizations as well, as they are adopting blockchains due to the buzzword but not considering how to use it to its fullest. If organizations manage that beforehand then maybe writing smart contracts can get easier. But the actual problem still lies in writing smart contracts and gaining the trust of people again after the DAO hack. In the coming future, we may witness a hybrid of paper and digital content where contracts are verified via blockchain and substantiated by physical copy.","title":"Smart Contract"},{"location":"get-started/smartcont/#what-are-smart-contracts","text":"A smart contract is a computer code running on top of a blockchain containing a set of rules under which the parties to that smart contract agree to interact with each other. If and when the predefined rules are met, the agreement is automatically enforced. The smart contract code facilitates, verifies, and enforces the negotiation or performance of an agreement or transaction. It is the simplest form of decentralized automation. In simpler words, it is rather a form of exchange of any type like money, property etc in a conflict-free way without the services of a middleman so it is trustless execution which is an important feature that smart contracts promises. Bitcoin was the first to support basic smart contracts in the sense that the network can transfer value from one person to another. The network of nodes will only validate transactions if certain conditions are met. Here is an example of a simple smart contract where we use simple set and get function then we increment and decrement some data.","title":"What are Smart Contracts?:"},{"location":"get-started/smartcont/#features-of-smart-contract","text":"Various features provided by smart contracts are: 1.Trust \u2014 Your documents are encrypted on a shared ledger. There\u2019s no way that someone can say they lost it. Smart contracts allow parties to commit and bind by the conditions and rules written inside it. 2.Transparency: Everything is written inside a smart contract with intricate details so anyone can read the details before agreeing and thus eliminates the chance of future disputes. There is no miscommunication as all the information is open with everybody. 3. Autonomous: You\u2019re the one making the agreement; there\u2019s no need to rely on a broker, lawyer or other intermediaries to confirm. This also knocks out the danger of manipulation by a third party, since execution is managed automatically by the network. 4.Accuracy: Automated contracts are not only faster and cheaper but also avoid the errors that come from a person making the contract who can miss some conditions but in smart contracts, it will result in an error, therefore, all the conditions are put in a detailed form. 5.Speed: If anyone would read documents or contracts manually it would take a chunk of time, whereas smart contracts are a bunch of code used to automate task and hence save hours of time. 6.Savings: Smart contracts can help to save a lot of money as it removes the presence of an intermediary. For instance, you would pay a lawyer for your case but in smart contracts, it\u2019s all in your hand as the code is the law. 7.Safety: Cryptographically encryption keeps your data safe. Since they match the highest safety standards, the level of protection involved in them allows to be secure to use for critical processes","title":"Features of Smart Contract"},{"location":"get-started/smartcont/#problem-solution","text":"1.We can solve some of the problems with smart contracts like upgrade problems by using modular smart contracts. So, we can have modular.sol files while building on Ethereum that can be easily upgraded without losing information. 2.Using Delegatecall-based proxies for contract upgrading. In delegatecall logic data are kept in separate contracts, but the data contract (the proxy) calls the logic contract through delegatecall. It is difficult to apply the delegatecall-based proxy pattern correctly. The proxy pattern requires that memory layouts stay consistent between contract and compiler upgrades. A developer unfamiliar with EVM internals can easily introduce critical bugs during an upgrade. 3.The legal issues of smart contracts can only be solved over time as they are in their initial development stage; it will require time. 4.The major problem of writing smart contracts can be solved by not implementing Turing-complete smart contracts. 5.And, the oracle problem can be solved maybe by a consensus protocol in the community itself which will help to see how things are in the physical world.","title":"Problem Solution"},{"location":"get-started/smartcont/#application-of-smart-contracts","text":"1.Digital Identity: Smart contracts allow users to own and control their digital identity i.ie data, reputation and assets. It provides enterprises with the opportunity to seamlessly know their customers while individuals may not disclose sensitive data which reduces the frictionless know-your-customer requirements. 2.Financial Data Recording: Financial organizations can utilize smart contracts for accurate, transparent financial data recording. Smart contracts allow for uniform financial data across organizations, improving financial reporting and reducing auditing costs.By improving data integrity, smart contracts support increased market stability. They also reduce accounting costs by allowing cost sharing among organizations. 3.Healthcare: Personal health records could be encoded and stored on the blockchain with a private key which would grant access only to specific individuals. The same strategy could be used to ensure that research is conducted via HIPAA laws (in a secure and confidential way). Receipts of surgeries could be stored on a blockchain and automatically sent to insurance providers as proof-of-delivery. The ledger, too, could be used for general healthcare management, such as supervising drugs, regulation compliance, testing results, and managing healthcare supplies. 4.Real Estate: You can get more money through smart contracts. Ordinarily, if you wanted to rent your apartment to someone, you\u2019d need to pay a middleman such as Craigslist or a newspaper to advertise and then again you\u2019d need to pay someone to confirm that the person paid rent and followed through. The ledger cuts your costs. All you do is pay via bitcoin and encode your contract on the ledger.","title":"Application of Smart Contracts"},{"location":"get-started/smartcont/#conclusion","text":"Smart contracts do offer a lot and have shown signs of how promising they can be, but they are still in their initial stages so with time maybe we will see their actual potential which could provide for all sorts of social changes which is really exciting. A big problem lies with the organizations as well, as they are adopting blockchains due to the buzzword but not considering how to use it to its fullest. If organizations manage that beforehand then maybe writing smart contracts can get easier. But the actual problem still lies in writing smart contracts and gaining the trust of people again after the DAO hack. In the coming future, we may witness a hybrid of paper and digital content where contracts are verified via blockchain and substantiated by physical copy.","title":"Conclusion"},{"location":"get-started/stablecoin/","text":"What is a Stablecoin ? how to create a stablecoin ? \u00b6 This information is intended to understanding what is Stable Coin, why do we need it and what are its real-world applications. A Complete Guide on StableCoin. We shall discuss the following topics in the article: What is a StableCoin Types of StableCoins Why StableCoin Real-World Applications of Stable Coins Top StableCoins in the Market How to Build a Stablecoin To Compete with Libra or USD Coin. What is a StableCoin? Explaining Stablecoin XinFin XDC Network's Stable coins aim to bridge the gap between cryptocurrencies\u2019 benefits and the stable nature offered by fiat currencies. It is a crypto token with a value pegged to the price of a national currency to combat its volatility. Now, the question is, why do we need a stable coin. Though cryptocurrencies are global currencies, coins like Bitcoin and Ether are volatile. The price of Bitcoin raised from USD 1000 to USD 20000 during 2017. Since it is not sustainable, users and investors require more stability in the market. Imagine that you pay USD 30 for dinner today and the same amount would be worth USD 40 tomorrow because the value of that crypto token went up. Small investors cannot handle that kind of volatility. Therefore, stable coins emerged as a new technique to drive the new way of adoption to cryptocurrencies. You might think why do we need to create fiat-backed crypto tokens instead of just using fiat currency. Decentralized currencies do not require any centralized authority to bring trust in the system, thereby reducing additional costs involved. Also, cross border payments can be made quickly with cryptocurrencies. Backing crypto tokens with stable fiat currency or assets can add more value and build more trust among investors and users. What are the types of StableCoins? Fiat-backed Fiat backed stablecoins are crypto tokens associated with the value of a specific fiat currency. These tokens hold their value fixed at 1:1 ratio. For example, Tether is a stable coin, which is pegged 1:1 to the US dollar. Fiat currency is deposited as collateral to ensure the existence of a fiat-backed stablecoin. As a result, it requires financial custodian and regular auditing to determine that the token always remains collateralized. e.g: Facebook LIBRA, USD Coin (USDC), Gemini stablecoin (GUSDT) etc Non-collateralized Non-collateralized stablecoins are based on the concept of a Seigniorage Shares system. Seigniorage is the difference between the value of money and its printing cost. These coins depend on the algorithm, which changes the supply volume to control their price. Using smart contracts, these stable coins are sold if the price falls below the pegged currency and more tokens are supplied to the market if its value rises above the pegged currency. Cryptocurrency-backed Cryptocurrency-backed stable coins work similarly to that of a fiat-backed stablecoin. However, it locks up cryptocurrency as collateral instead of using fiat currency. For example, Ethereum can be kept as collateral to create a cryptocurrency-backed stablecoin. These tokens use a security pledge to compensate for the volatility of cryptocurrency to be used as collateral. It states that the stablecoin will not be based on 1:1 ration for the crypto collateral. Commodity-collateralized Commodity-collateralized stablecoins are backed by other types of interchangeable assets like real estate and precious metals. Gold is one of the most common commodities to be collateralized. Commodity-backed stable coins hold a tangible asset with some real value. These commodities can appreciate value over time, which offers an increased incentive to people to use and keep these coins. Using commodity-collateralized stable coins, anyone can invest in real estate properties or precious metals across the world. Generally, the investment in such assets is only reserved for the wealthy class of investors. However, stablecoins open up investment opportunities for average individuals globally. Why StableCoin? A XinFin stablecoin is a cryptocurrency that offers low volatility against the world\u2019s major national currencies, unlocking the benefits for decentralized technology. In a nutshell, stablecoins can be defined as a cryptocurrency with a fixed price. A reliable stablecoin offers a number of use cases than that of the blockchain. People no more need to worry about the fluctuations in prices of the cryptocurrency daily while buying them. Stability in cryptocurrencies allows people to transact quickly and it also enables other crucial financial functions, including credit and loans. Moreover, a stable decentralized currency could become a global currency by allowing trustless and cross-border transactions. It will especially benefit people residing in countries with unstable monetary systems like Argentina. Therefore, stablecoins emerge as a new option for investors who want to make a transaction via a global currency, providing access to all. The adoption of stablecoins will support the capital market formation and present new opportunities for decentralized finance on the blockchain like derivatives markets and lending. USDT or tether stablecoin widely used in cryptocurrency indutry. If you are looking to gain the trust of investors by creating a stablecoin backed by a stable asset or fiat currency, we can help you develop a secure and reliable stablecoin for you. Please visit https://st.mycontract.co to create your own stable coin on XinFin Main Network OR XinFin Apothem Network and follow the below steps. Login through XinPay OR Private Key Fill up the require details Review the token details Token Deployed Demo Video How to Build a Stablecoin To Compete with Libra If you are looking to gain the trust of investors by creating a stablecoin backed by a stable asset or fiat currency, we can help you develop a secure and reliable stablecoin for you. Please visit https://st.mycontract.co to create your own stable coin on XinFin (XDC) Network.You dont need stablecoin development company to deploy stablecoin on XinFin XDC Network.","title":"Set up Stable Coin on XinFin Network"},{"location":"get-started/stablecoin/#what-is-a-stablecoin-how-to-create-a-stablecoin","text":"This information is intended to understanding what is Stable Coin, why do we need it and what are its real-world applications. A Complete Guide on StableCoin. We shall discuss the following topics in the article: What is a StableCoin Types of StableCoins Why StableCoin Real-World Applications of Stable Coins Top StableCoins in the Market How to Build a Stablecoin To Compete with Libra or USD Coin. What is a StableCoin? Explaining Stablecoin XinFin XDC Network's Stable coins aim to bridge the gap between cryptocurrencies\u2019 benefits and the stable nature offered by fiat currencies. It is a crypto token with a value pegged to the price of a national currency to combat its volatility. Now, the question is, why do we need a stable coin. Though cryptocurrencies are global currencies, coins like Bitcoin and Ether are volatile. The price of Bitcoin raised from USD 1000 to USD 20000 during 2017. Since it is not sustainable, users and investors require more stability in the market. Imagine that you pay USD 30 for dinner today and the same amount would be worth USD 40 tomorrow because the value of that crypto token went up. Small investors cannot handle that kind of volatility. Therefore, stable coins emerged as a new technique to drive the new way of adoption to cryptocurrencies. You might think why do we need to create fiat-backed crypto tokens instead of just using fiat currency. Decentralized currencies do not require any centralized authority to bring trust in the system, thereby reducing additional costs involved. Also, cross border payments can be made quickly with cryptocurrencies. Backing crypto tokens with stable fiat currency or assets can add more value and build more trust among investors and users. What are the types of StableCoins? Fiat-backed Fiat backed stablecoins are crypto tokens associated with the value of a specific fiat currency. These tokens hold their value fixed at 1:1 ratio. For example, Tether is a stable coin, which is pegged 1:1 to the US dollar. Fiat currency is deposited as collateral to ensure the existence of a fiat-backed stablecoin. As a result, it requires financial custodian and regular auditing to determine that the token always remains collateralized. e.g: Facebook LIBRA, USD Coin (USDC), Gemini stablecoin (GUSDT) etc Non-collateralized Non-collateralized stablecoins are based on the concept of a Seigniorage Shares system. Seigniorage is the difference between the value of money and its printing cost. These coins depend on the algorithm, which changes the supply volume to control their price. Using smart contracts, these stable coins are sold if the price falls below the pegged currency and more tokens are supplied to the market if its value rises above the pegged currency. Cryptocurrency-backed Cryptocurrency-backed stable coins work similarly to that of a fiat-backed stablecoin. However, it locks up cryptocurrency as collateral instead of using fiat currency. For example, Ethereum can be kept as collateral to create a cryptocurrency-backed stablecoin. These tokens use a security pledge to compensate for the volatility of cryptocurrency to be used as collateral. It states that the stablecoin will not be based on 1:1 ration for the crypto collateral. Commodity-collateralized Commodity-collateralized stablecoins are backed by other types of interchangeable assets like real estate and precious metals. Gold is one of the most common commodities to be collateralized. Commodity-backed stable coins hold a tangible asset with some real value. These commodities can appreciate value over time, which offers an increased incentive to people to use and keep these coins. Using commodity-collateralized stable coins, anyone can invest in real estate properties or precious metals across the world. Generally, the investment in such assets is only reserved for the wealthy class of investors. However, stablecoins open up investment opportunities for average individuals globally. Why StableCoin? A XinFin stablecoin is a cryptocurrency that offers low volatility against the world\u2019s major national currencies, unlocking the benefits for decentralized technology. In a nutshell, stablecoins can be defined as a cryptocurrency with a fixed price. A reliable stablecoin offers a number of use cases than that of the blockchain. People no more need to worry about the fluctuations in prices of the cryptocurrency daily while buying them. Stability in cryptocurrencies allows people to transact quickly and it also enables other crucial financial functions, including credit and loans. Moreover, a stable decentralized currency could become a global currency by allowing trustless and cross-border transactions. It will especially benefit people residing in countries with unstable monetary systems like Argentina. Therefore, stablecoins emerge as a new option for investors who want to make a transaction via a global currency, providing access to all. The adoption of stablecoins will support the capital market formation and present new opportunities for decentralized finance on the blockchain like derivatives markets and lending. USDT or tether stablecoin widely used in cryptocurrency indutry. If you are looking to gain the trust of investors by creating a stablecoin backed by a stable asset or fiat currency, we can help you develop a secure and reliable stablecoin for you. Please visit https://st.mycontract.co to create your own stable coin on XinFin Main Network OR XinFin Apothem Network and follow the below steps. Login through XinPay OR Private Key Fill up the require details Review the token details Token Deployed Demo Video How to Build a Stablecoin To Compete with Libra If you are looking to gain the trust of investors by creating a stablecoin backed by a stable asset or fiat currency, we can help you develop a secure and reliable stablecoin for you. Please visit https://st.mycontract.co to create your own stable coin on XinFin (XDC) Network.You dont need stablecoin development company to deploy stablecoin on XinFin XDC Network.","title":"What is a Stablecoin ? how to create a stablecoin ?"},{"location":"media/articles/","text":"XinFin Network Presents One-Click Installer for Blockchain Node Setup A Step-by-Step Guide to Swap Tokens on XinFin Mainnet XinFin Connects Blockchain Factoring Tool To QuickBooks XinFin joins R3 blockchain consortium to host dApps on Corda XinFin successfully tested 2000 TPS Comparing XinFin with ETH, Zilliqa, Bitcoin and Ripple","title":"Articles"},{"location":"misc/wip/","text":"Work in progress \u00b6 We are working hard to provide a complete documentation for all our products but this page is not yet ready. If you have any questions, please join us on Gitter .","title":"Work in progress"},{"location":"misc/wip/#work-in-progress","text":"We are working hard to provide a complete documentation for all our products but this page is not yet ready. If you have any questions, please join us on Gitter .","title":"Work in progress"},{"location":"wp-and-research/technical-whitepaper/","text":"Introduction \u00b6 version 1.0 ( pdf version ) Blockchain paradigm History : Over the past few years, an important innovation colloquially known as the \u201cBlockchain\u201d has emerged as a potentially disruptive technology. The core of the innovation is built around the concept of a distributed cryptographic database. The database, also referred to as the ledger, is maintained by a network of computers. The ledger makes it possible for the entire network to create, evolve and keep track of an immutable record of transactions. The most successful blockchain application thus far has been Satoshi Nakamoto\u2019 s cryptocurrency known as Bitcoin, which he outlined in his seminal paper, \u201cBitcoin: A Peer-to-Peer Electronic Cash System\u201d in 2008. This powerful technology has so far been implicated in the numerous cryptocurrencies that exist online. Financial institutions are only beginning to understand the potential applications of blockchain in conventionally regulated industries. Understanding the Blockchain : At a fundamental level the blockchain is a data structure that cryptographically links blocks of transactions or any potential transfers of value. As a paradigm, the blockchain allows for true privacy to exist between those involved in a transaction. This characteristic of the blockchain that makes its most significant implementation in the financial industry. Its structure allows for automation, immutability, and decentralization. These characteristics were carefully chosen by Nakamoto in order to create a digital mechanism of trust. For the financial world this would result in a more limited reliance on third party trust mechanisms enabling a direct contractual interface between two parties involved in any transfer of value. This technology has the power make such exchanges safer, faster, and costeffective. Ownership of value stored in the blockchain is established through asymmetrical cryptography. Digital keys, wallet addresses, and digital signatures are all created cryptographically to ensure total privacy in transmission of transactional data. Every transaction on the blockchain needs to be 'signed' using digital keys. Whoever owns these keys, owns access to the value stored in the wallet. All keys generated by the wallet software come in pairs; a private key, which is kept secret and a public key. The public key is akin to a bank account number and the private key is like the secret pin used to control the account. The idea behind digital signatures is that private and public key pair shares a mathematical relationship such that a message (transaction) signed by a private key can be verified by a public key without revealing the private key. Public Blockchain : The Bitcoin's blockchain network is structured as a peer-to-peer network architecture. In this network implementation, all nodes are equal or symmetric. There is no server, no centralized service, and no hierarchy in the Bitcoin's network. Blockchain implementations for the financial industry however, cannot allow for such an open and symmetric network structure. Bitcoin enthusiasts advocate, therefore, that the blockchain and Bitcoin are fundamentally linked. This is a short sighted view taking into consideration that the Bitcoin technology stack exists to solve the problem of an unregulated digital currency. The same stack can be evolved to solve similar transfers of value over an asymmetric network. The XDC Protocol: Technical Whitepaper by Xinfin Organization. September 2017. All rights reserved. V1.0 4 The development of the Ethereum blockchain was a major milestone in the blockchain ecosystem. The focus shifted onto system state and virtual machines that could run smart contracts across the network. With the availability of Turing complete smart contracts, the limited functionality of the Bitcoin scripting language was overcome and a number of different applications became possible. Private Blockchain : Private blockchains came into prominence with the Hyperledger Project that saw participation from IBM and Intel in 2016. Another major private blockchain developed by R3 called Corda also raised significant amounts of money. Since then, R3 has also joined the Hyperledger Project. Fully private blockchains make the case that centralized and trusted implementation of the core data structure of the blockchain along with significant changes to the consensus mechanism are meaningful value propositions for enterprise applications. Hybrid Blockchain : Hybrid blockchains are fairly unexplored and only few implementations exist; even in development. Quorum developed by JP Morgan is designed to be the hybrid blockchain in a fully permissioned environment. Truly Hybrid blockchain must necessarily be able to connect public blockchain with a private blockchain implementation running in a fully permissioned environment. The XDC hybrid blockchain aims to be exactly that, leveraging the power of both the public and private blockchain paradigms.","title":"Technical whitepaper"},{"location":"wp-and-research/technical-whitepaper/#introduction","text":"version 1.0 ( pdf version ) Blockchain paradigm History : Over the past few years, an important innovation colloquially known as the \u201cBlockchain\u201d has emerged as a potentially disruptive technology. The core of the innovation is built around the concept of a distributed cryptographic database. The database, also referred to as the ledger, is maintained by a network of computers. The ledger makes it possible for the entire network to create, evolve and keep track of an immutable record of transactions. The most successful blockchain application thus far has been Satoshi Nakamoto\u2019 s cryptocurrency known as Bitcoin, which he outlined in his seminal paper, \u201cBitcoin: A Peer-to-Peer Electronic Cash System\u201d in 2008. This powerful technology has so far been implicated in the numerous cryptocurrencies that exist online. Financial institutions are only beginning to understand the potential applications of blockchain in conventionally regulated industries. Understanding the Blockchain : At a fundamental level the blockchain is a data structure that cryptographically links blocks of transactions or any potential transfers of value. As a paradigm, the blockchain allows for true privacy to exist between those involved in a transaction. This characteristic of the blockchain that makes its most significant implementation in the financial industry. Its structure allows for automation, immutability, and decentralization. These characteristics were carefully chosen by Nakamoto in order to create a digital mechanism of trust. For the financial world this would result in a more limited reliance on third party trust mechanisms enabling a direct contractual interface between two parties involved in any transfer of value. This technology has the power make such exchanges safer, faster, and costeffective. Ownership of value stored in the blockchain is established through asymmetrical cryptography. Digital keys, wallet addresses, and digital signatures are all created cryptographically to ensure total privacy in transmission of transactional data. Every transaction on the blockchain needs to be 'signed' using digital keys. Whoever owns these keys, owns access to the value stored in the wallet. All keys generated by the wallet software come in pairs; a private key, which is kept secret and a public key. The public key is akin to a bank account number and the private key is like the secret pin used to control the account. The idea behind digital signatures is that private and public key pair shares a mathematical relationship such that a message (transaction) signed by a private key can be verified by a public key without revealing the private key. Public Blockchain : The Bitcoin's blockchain network is structured as a peer-to-peer network architecture. In this network implementation, all nodes are equal or symmetric. There is no server, no centralized service, and no hierarchy in the Bitcoin's network. Blockchain implementations for the financial industry however, cannot allow for such an open and symmetric network structure. Bitcoin enthusiasts advocate, therefore, that the blockchain and Bitcoin are fundamentally linked. This is a short sighted view taking into consideration that the Bitcoin technology stack exists to solve the problem of an unregulated digital currency. The same stack can be evolved to solve similar transfers of value over an asymmetric network. The XDC Protocol: Technical Whitepaper by Xinfin Organization. September 2017. All rights reserved. V1.0 4 The development of the Ethereum blockchain was a major milestone in the blockchain ecosystem. The focus shifted onto system state and virtual machines that could run smart contracts across the network. With the availability of Turing complete smart contracts, the limited functionality of the Bitcoin scripting language was overcome and a number of different applications became possible. Private Blockchain : Private blockchains came into prominence with the Hyperledger Project that saw participation from IBM and Intel in 2016. Another major private blockchain developed by R3 called Corda also raised significant amounts of money. Since then, R3 has also joined the Hyperledger Project. Fully private blockchains make the case that centralized and trusted implementation of the core data structure of the blockchain along with significant changes to the consensus mechanism are meaningful value propositions for enterprise applications. Hybrid Blockchain : Hybrid blockchains are fairly unexplored and only few implementations exist; even in development. Quorum developed by JP Morgan is designed to be the hybrid blockchain in a fully permissioned environment. Truly Hybrid blockchain must necessarily be able to connect public blockchain with a private blockchain implementation running in a fully permissioned environment. The XDC hybrid blockchain aims to be exactly that, leveraging the power of both the public and private blockchain paradigms.","title":"Introduction"},{"location":"xinfinexp/features/","text":"Xinfin Explorer \u00b6 Xinfin Explorer provides a block explorer to the XinFin Network ecosystem with user friendly, detailed and professional user interface. Xinfin Explorer brings XDCChain\u2019s transparency to users. All blocks, transactions, smart contracts, tokens and basically everything happening on the chain are shown to the users. Furthermore, Xinfin Explorer also offers technical overview and expose useful metrics about the XinFin Network. Home \u00b6 This is the home page of Xinfin Explorer. In the right corner of the page you can find a search field that let you find anything by its address or tx hash. Under it, some general stats gives you the total amount of accounts, tokens, timestamps, tx hash and blocks. Transactions \u00b6 All the transactions pages list the following informations: The transaction's ID (Transaction Hash). The block containing this transaction. The transaction's age. The sender's address. The recipient's address. The transaction's ammount in XDC. The gas used. The gas limit The gas fees. The fee. The data. All transactions \u00b6 All the transactions that happened on the chain. Sign transactions \u00b6 Sign transactions emited by the masternodes. Blocks \u00b6 When consulting a blocks, the page list the following informations: The transaction's ID (Transaction Hash). The transaction parent hash. The transaction gas used. The transaction gas price. The transaction total gas cost. The transaction timestamps. The transaction size. Please keep in mind that Xinfin Explorer is subject to go through some changes. This is why your feedback is so much appreciated!","title":"Features"},{"location":"xinfinexp/features/#xinfin-explorer","text":"Xinfin Explorer provides a block explorer to the XinFin Network ecosystem with user friendly, detailed and professional user interface. Xinfin Explorer brings XDCChain\u2019s transparency to users. All blocks, transactions, smart contracts, tokens and basically everything happening on the chain are shown to the users. Furthermore, Xinfin Explorer also offers technical overview and expose useful metrics about the XinFin Network.","title":"Xinfin Explorer"},{"location":"xinfinexp/features/#home","text":"This is the home page of Xinfin Explorer. In the right corner of the page you can find a search field that let you find anything by its address or tx hash. Under it, some general stats gives you the total amount of accounts, tokens, timestamps, tx hash and blocks.","title":"Home"},{"location":"xinfinexp/features/#transactions","text":"All the transactions pages list the following informations: The transaction's ID (Transaction Hash). The block containing this transaction. The transaction's age. The sender's address. The recipient's address. The transaction's ammount in XDC. The gas used. The gas limit The gas fees. The fee. The data.","title":"Transactions"},{"location":"xinfinexp/features/#all-transactions","text":"All the transactions that happened on the chain.","title":"All transactions"},{"location":"xinfinexp/features/#sign-transactions","text":"Sign transactions emited by the masternodes.","title":"Sign transactions"},{"location":"xinfinexp/features/#blocks","text":"When consulting a blocks, the page list the following informations: The transaction's ID (Transaction Hash). The transaction parent hash. The transaction gas used. The transaction gas price. The transaction total gas cost. The transaction timestamps. The transaction size. Please keep in mind that Xinfin Explorer is subject to go through some changes. This is why your feedback is so much appreciated!","title":"Blocks"},{"location":"xinfinpay/features/","text":"Get Started with XinPay Crypto Asset \u00b6 In this tutorial, we\u2019ll be discussing an essential technology that correlates with the core operation of XinFin \u2014 Network transactions. Understanding Xinpay \u00b6 XinPay is a bridge that allows you to visit the distributed web of tomorrow in your browser today. It allows you to run XinFin DApps right in your browser without running a full XinFin node. While doing transactions on the blockchain network, it uses computing power which is called gas cost, and much like gas in real life, you have to pay for it. For you to pay that gas cost, you will need a wallet that handles your money, and that\u2019s where XinPay comes in. Well, I guess that\u2019s enough information about XinPay for now. We don\u2019t have to explore every angle of the equation. I bet you get the gist of its purpose already. Without further ado, let\u2019s jump right into the first question! How can I install it? \u00b6 Before you install XinPay, you have to know that XinPay only supports a couple of browsers. XinPay supports the following browsers: - Google Chrome (or any Chromium browsers, Brave, a DApp Chromium browser.) - Mozilla Firefox - Opera If you already have any of the above, you can proceed, otherwise, you should download at least one of the listed browsers and you\u2019re good to go! For you to download XinPay, you should first go to this link and download it. You can also download XinPay on your browser\u2019s plugin extension web store, but if you want to be directed automatically to the download page dedicated for your browser, the link is the way to go. Once you\u2019re inside, you should see Xinpay iconic XinFin head following your mouse direction. Under it, you should see the GET CHROME EXTENSION orange button, click that, and you\u2019ll be automatically directed to your browser\u2019s store. For Google Chrome browser\u2019s example, you should see something like this Now after getting in, just add the plugin extension, and it will install itself on the browser after downloading. (in Chrome\u2019s case, click the Add to Chrome button.) Once it is installed, a new tab will suddenly pop up, it\u2019s the Xinpay wallet\u2019s welcome page. But you\u2019ll get the same interface on the actual wallet so just close it. Once closed, click here: If you click that icon, you should trigger the Metamask wallet\u2019s user interface. This is how the wallet looks like: Now just click continue, and you\u2019ll be directed to creating your password. Don\u2019t go import seed since you don\u2019t have an existing account yet. You will use that if you want to recover your account. We'll talk about account recovery later in this article. After creating and confirming your password, you\u2019ll go through some terms and agreements, then you\u2019ll be given a secret backup phrase. That phrase is the heart of your account since it is derived from a unique hash created when you created the account just now. As said, you shouldn\u2019t compromise the phrase to anyone, because if your wallet has XDC inside then that can be transferred to someone else. Although Xinpay is a wallet made for developers, you still have to exercise secrecy. (The account I have shown is for demonstration purposes so it\u2019s totally fine.) After saving the phase, you will need to confirm it next. Then it will ask you if you want to deposit, skip, and close that for now. Finally, you\u2019re done! You have successfully installed Xinpay, and made your very own wallet. Yeah, we did install Xinpay, but what is the catch about that wallet? What is it capable of? This leads us to the next point: What can it do? \u00b6 For the features of Xinpay, there\u2019s a lot that you can do. But I\u2019m not going to cover everything since my focus is to teach you just enough to get you ready for developing your XinFin decentralized applications. Here are the basic features of Xinpay that you will need: Adding/Importing accounts Switching accounts Switching networks Requesting tokens (Testnet Faucet) Sending tokens (XDC) Adding/Searching for token Getting backup seed Alright! That\u2019s all you need to know about the features. Let\u2019s now head to the next question: How do I use it? \u00b6 To track our progress easily, let\u2019s just learn all those listed features from top to bottom. But before that, I\u2019m just going to show you a few helpful things: Let\u2019s try to look at the highlighted portion on the top side. Below the name of the account: Account 1, you can see random-looking character string, something that looks like this - xdc607b... That is your account\u2019s wallet address, if you click it, the address will be copied onto your clipboard. This is very helpful since you\u2019ll be using your account a lot on your smart contract development and your dApps as a test account. Next is the one below it, which is your transaction history. Here you will see the state of your transactions whether or not it is finished, pending or the transaction had failed, etc. Also, if you want to switch the value from Fiat to dx you can do that by going to the top right highlighted button, as shown here: When clicked, a window will show up under it. From there, you can see from the bottom-most part, which is the Settings button with the gear icon. Hit that button and it should show this: You\u2019ll be taken to this interface, initially on the Settings tab. Without scrolling, you\u2019ll be able to see the Primary Currency section, from the Fiat radio button, switch it to *XDC, and that\u2019s it. If you go back to your Main interface by hitting the head button, it should change by now: Adding/Importing accounts \u00b6 For this feature, it lets you add more than one wallet. This can be useful both in development and in real life. Since you\u2019ll be making applications, you will need to test not only one account but will have to get your accounts to interact with each other on a smart contract. Makes sense, right? Adding accounts \u00b6 From main, for you to add an account, just go to the highlighted top right button and click it. This will prompt a new window, showing a list of items. On the top side of that window, it shows the list of accounts that you currently have. As of now, you only have one account which is Account 1. To add another, just click the first option below it: + Create Account. When clicked, you\u2019ll be directed to a very self-explanatory interface, which contains an input for the name of your account and the button Create, hit it. When you go back, you'll have your new account waiting for you. It also has its unique address. Importing accounts \u00b6 If you have an existing account, you can click on Import Account. You will be taken in an interface where you will have to put a secret backup phase in the private key string text input of the Private Key category. If you want to import JSON, you can do so by changing it in JSON. The last thing to do is to hit the Import button. Switching accounts \u00b6 Since you learned how to import and add accounts, I assume you made new ones too. So, let\u2019s learn how to switch accounts! In the example above, you can see that I have already added 2 more accounts: Account 2 and Account 3. On the same window as before, if we want to switch to Account 2, from the list, just click it. Switching networks \u00b6 Switching networks is an important thing about Xinpay. As you have recently seen, we\u2019re using the Main XinFin Network. But that\u2019s not the development network, there\u2019s a network for one. As you can see in the picture above, we\u2019re on the Main network. But underneath it is developers\u2019 available networks. Most often, developers usually use the XinFin Apothem Network. That is if you\u2019re using Remix directly with injected Web3 setting. Localhost:8545 however, is for your local XinFin network. Choosing a network is a case to case basis, but for common action, let\u2019s choose Apothem Test Network, click it and you\u2019re in it already! Request tokens \u00b6 Making transactions costs gas amount, and gas costs money. So we will need tokens every time we interact with/test contracts or send tokens. But all these are mostly used if you\u2019re going to spend and do real transactions on Main-net. For the developers, however, if you switch to a developer network such as Apothem Network, you will see this: You will see a Test Faucet. By clicking the XinFin Apothem Testnet Test Faucet button, you will be able to get free tokens. But these tokens have no real value since it\u2019s a testing network. By just clicking the blue button, you\u2019ll be able to request XDC. From there, for a short moment, it will take effect and give you tokens that you\u2019ll be needing as gas for testing in development. Here is the link of the Testnet Faucet, get yours now! Send tokens \u00b6 Before proceeding, try getting tokens for at your one account from the Test Faucet on Apothem Network. If you already have tokens, we can now try to send tokens to another account. To see the effect, send it to your other created account. From the Apothem Network, if you hit the Send button, you\u2019ll be sent to this interface. In the example, Account 1 has 100 XDC, and by hitting the recipient address input text, you\u2019ll be able to choose or pastedown an address. In your case, use your account that has XDC, and send it to your other account. Set the amount on the Amount section, and you can set how fast the transaction will be beneath it, it\u2019s customizable. After you set everything, hit Next. And you\u2019ll be sent in this interface: Confirmation Interface \u00b6 This is the exact interface whenever you make transactions on XinFin using Xinpay. You\u2019ll see a lot of this prompting interface once you start developing. From here you can also edit the gas fee, to make your transaction faster. In here, we are sending 0.457 XDC to Account 1. Hit Confirm and your transaction will be processed and will also show up on your Transaction History on the main interface. Add/Search tokens \u00b6 Aside from XDC token, there are also different kinds of tokens that you can use based on the kind of DApp you use. Usually, when you make a DApp they also make their cryptocurrency. So here, I\u2019ll show you how to search and add your token. Add tokens \u00b6 From the main interface, go to top left menu icon beneath the Home button. Once you hit the menu, you\u2019ll be able to see this one slide: From what you can see above, your token shows up, under that is a supposed list for the other tokens. Since you only have the XinFin token, you can\u2019t notice the list. With that said, you can add a token, it\u2019s either you add your own made token from an ERC20 standard contract or you search someone\u2019s token assuming that you have one already. Let\u2019s go with adding your own first. On the Custom Token tab is where you can add your own created token. There are 3 input fields. The last two fill in by themselves once you fill in the Token Address input text field. So the first one is the only one needed. If you plan to make your token, you can try it on the Custom Token tab. Just hit Next and you\u2019re good to go. It is added to the list. If you choose one from the list, you can use it for your transactions related to that token. Now on to the searching of the token. Search tokens \u00b6 Same as before, if you go to the menu icon again, on the Search tab, you will see this interface: As seen above, XF is a known example of a crypto token. If in an instance, you have received XF tokens, then you can search and verify it from here, and add it to your token list. Get backup seed \u00b6 If in case you forgot your secret backup phrase, you can get it from your settings, so go back to settings from the top-right menu button. When you get inside Settings, and if you scroll down in the middle you will find the Reveal Seed Words section. If you hit the Reveal Seed Words button, the secret backup phrase will be shown and you can copy it. Keep it safe! Questions? Join Telegram Channel to get answers: https://t.me/joinchat/GeOl40UaNJPlFLNwSvu9cQ Summary \u00b6 It\u2019s finished! That tutorial sure was a bit long but I\u2019m pretty sure that what you learned just now, will equip you enough for your future or current developments for making your decentralized XinFin applications. In case you forget some things you learned from here, you can always come back. It\u2019s natural if you don\u2019t remember everything in one go, every developer\u2019s been there. You\u2019ll get better soon enough! Even these non-blockchain related Microsoft developers are happy for you: Hope you learned a lot and good luck venturing deeper into blockchain. Until then, signing out, and stay tuned!","title":"Features"},{"location":"xinfinpay/features/#get-started-with-xinpay-crypto-asset","text":"In this tutorial, we\u2019ll be discussing an essential technology that correlates with the core operation of XinFin \u2014 Network transactions.","title":"Get Started with XinPay Crypto Asset"},{"location":"xinfinpay/features/#understanding-xinpay","text":"XinPay is a bridge that allows you to visit the distributed web of tomorrow in your browser today. It allows you to run XinFin DApps right in your browser without running a full XinFin node. While doing transactions on the blockchain network, it uses computing power which is called gas cost, and much like gas in real life, you have to pay for it. For you to pay that gas cost, you will need a wallet that handles your money, and that\u2019s where XinPay comes in. Well, I guess that\u2019s enough information about XinPay for now. We don\u2019t have to explore every angle of the equation. I bet you get the gist of its purpose already. Without further ado, let\u2019s jump right into the first question!","title":"Understanding Xinpay"},{"location":"xinfinpay/features/#how-can-i-install-it","text":"Before you install XinPay, you have to know that XinPay only supports a couple of browsers. XinPay supports the following browsers: - Google Chrome (or any Chromium browsers, Brave, a DApp Chromium browser.) - Mozilla Firefox - Opera If you already have any of the above, you can proceed, otherwise, you should download at least one of the listed browsers and you\u2019re good to go! For you to download XinPay, you should first go to this link and download it. You can also download XinPay on your browser\u2019s plugin extension web store, but if you want to be directed automatically to the download page dedicated for your browser, the link is the way to go. Once you\u2019re inside, you should see Xinpay iconic XinFin head following your mouse direction. Under it, you should see the GET CHROME EXTENSION orange button, click that, and you\u2019ll be automatically directed to your browser\u2019s store. For Google Chrome browser\u2019s example, you should see something like this Now after getting in, just add the plugin extension, and it will install itself on the browser after downloading. (in Chrome\u2019s case, click the Add to Chrome button.) Once it is installed, a new tab will suddenly pop up, it\u2019s the Xinpay wallet\u2019s welcome page. But you\u2019ll get the same interface on the actual wallet so just close it. Once closed, click here: If you click that icon, you should trigger the Metamask wallet\u2019s user interface. This is how the wallet looks like: Now just click continue, and you\u2019ll be directed to creating your password. Don\u2019t go import seed since you don\u2019t have an existing account yet. You will use that if you want to recover your account. We'll talk about account recovery later in this article. After creating and confirming your password, you\u2019ll go through some terms and agreements, then you\u2019ll be given a secret backup phrase. That phrase is the heart of your account since it is derived from a unique hash created when you created the account just now. As said, you shouldn\u2019t compromise the phrase to anyone, because if your wallet has XDC inside then that can be transferred to someone else. Although Xinpay is a wallet made for developers, you still have to exercise secrecy. (The account I have shown is for demonstration purposes so it\u2019s totally fine.) After saving the phase, you will need to confirm it next. Then it will ask you if you want to deposit, skip, and close that for now. Finally, you\u2019re done! You have successfully installed Xinpay, and made your very own wallet. Yeah, we did install Xinpay, but what is the catch about that wallet? What is it capable of? This leads us to the next point:","title":"How can I install it?"},{"location":"xinfinpay/features/#what-can-it-do","text":"For the features of Xinpay, there\u2019s a lot that you can do. But I\u2019m not going to cover everything since my focus is to teach you just enough to get you ready for developing your XinFin decentralized applications. Here are the basic features of Xinpay that you will need: Adding/Importing accounts Switching accounts Switching networks Requesting tokens (Testnet Faucet) Sending tokens (XDC) Adding/Searching for token Getting backup seed Alright! That\u2019s all you need to know about the features. Let\u2019s now head to the next question:","title":"What can it do?"},{"location":"xinfinpay/features/#how-do-i-use-it","text":"To track our progress easily, let\u2019s just learn all those listed features from top to bottom. But before that, I\u2019m just going to show you a few helpful things: Let\u2019s try to look at the highlighted portion on the top side. Below the name of the account: Account 1, you can see random-looking character string, something that looks like this - xdc607b... That is your account\u2019s wallet address, if you click it, the address will be copied onto your clipboard. This is very helpful since you\u2019ll be using your account a lot on your smart contract development and your dApps as a test account. Next is the one below it, which is your transaction history. Here you will see the state of your transactions whether or not it is finished, pending or the transaction had failed, etc. Also, if you want to switch the value from Fiat to dx you can do that by going to the top right highlighted button, as shown here: When clicked, a window will show up under it. From there, you can see from the bottom-most part, which is the Settings button with the gear icon. Hit that button and it should show this: You\u2019ll be taken to this interface, initially on the Settings tab. Without scrolling, you\u2019ll be able to see the Primary Currency section, from the Fiat radio button, switch it to *XDC, and that\u2019s it. If you go back to your Main interface by hitting the head button, it should change by now:","title":"How do I use it?"},{"location":"xinfinpay/features/#addingimporting-accounts","text":"For this feature, it lets you add more than one wallet. This can be useful both in development and in real life. Since you\u2019ll be making applications, you will need to test not only one account but will have to get your accounts to interact with each other on a smart contract. Makes sense, right?","title":"Adding/Importing accounts"},{"location":"xinfinpay/features/#adding-accounts","text":"From main, for you to add an account, just go to the highlighted top right button and click it. This will prompt a new window, showing a list of items. On the top side of that window, it shows the list of accounts that you currently have. As of now, you only have one account which is Account 1. To add another, just click the first option below it: + Create Account. When clicked, you\u2019ll be directed to a very self-explanatory interface, which contains an input for the name of your account and the button Create, hit it. When you go back, you'll have your new account waiting for you. It also has its unique address.","title":"Adding accounts"},{"location":"xinfinpay/features/#importing-accounts","text":"If you have an existing account, you can click on Import Account. You will be taken in an interface where you will have to put a secret backup phase in the private key string text input of the Private Key category. If you want to import JSON, you can do so by changing it in JSON. The last thing to do is to hit the Import button.","title":"Importing accounts"},{"location":"xinfinpay/features/#switching-accounts","text":"Since you learned how to import and add accounts, I assume you made new ones too. So, let\u2019s learn how to switch accounts! In the example above, you can see that I have already added 2 more accounts: Account 2 and Account 3. On the same window as before, if we want to switch to Account 2, from the list, just click it.","title":"Switching accounts"},{"location":"xinfinpay/features/#switching-networks","text":"Switching networks is an important thing about Xinpay. As you have recently seen, we\u2019re using the Main XinFin Network. But that\u2019s not the development network, there\u2019s a network for one. As you can see in the picture above, we\u2019re on the Main network. But underneath it is developers\u2019 available networks. Most often, developers usually use the XinFin Apothem Network. That is if you\u2019re using Remix directly with injected Web3 setting. Localhost:8545 however, is for your local XinFin network. Choosing a network is a case to case basis, but for common action, let\u2019s choose Apothem Test Network, click it and you\u2019re in it already!","title":"Switching networks"},{"location":"xinfinpay/features/#request-tokens","text":"Making transactions costs gas amount, and gas costs money. So we will need tokens every time we interact with/test contracts or send tokens. But all these are mostly used if you\u2019re going to spend and do real transactions on Main-net. For the developers, however, if you switch to a developer network such as Apothem Network, you will see this: You will see a Test Faucet. By clicking the XinFin Apothem Testnet Test Faucet button, you will be able to get free tokens. But these tokens have no real value since it\u2019s a testing network. By just clicking the blue button, you\u2019ll be able to request XDC. From there, for a short moment, it will take effect and give you tokens that you\u2019ll be needing as gas for testing in development. Here is the link of the Testnet Faucet, get yours now!","title":"Request tokens"},{"location":"xinfinpay/features/#send-tokens","text":"Before proceeding, try getting tokens for at your one account from the Test Faucet on Apothem Network. If you already have tokens, we can now try to send tokens to another account. To see the effect, send it to your other created account. From the Apothem Network, if you hit the Send button, you\u2019ll be sent to this interface. In the example, Account 1 has 100 XDC, and by hitting the recipient address input text, you\u2019ll be able to choose or pastedown an address. In your case, use your account that has XDC, and send it to your other account. Set the amount on the Amount section, and you can set how fast the transaction will be beneath it, it\u2019s customizable. After you set everything, hit Next. And you\u2019ll be sent in this interface:","title":"Send tokens"},{"location":"xinfinpay/features/#confirmation-interface","text":"This is the exact interface whenever you make transactions on XinFin using Xinpay. You\u2019ll see a lot of this prompting interface once you start developing. From here you can also edit the gas fee, to make your transaction faster. In here, we are sending 0.457 XDC to Account 1. Hit Confirm and your transaction will be processed and will also show up on your Transaction History on the main interface.","title":"Confirmation Interface"},{"location":"xinfinpay/features/#addsearch-tokens","text":"Aside from XDC token, there are also different kinds of tokens that you can use based on the kind of DApp you use. Usually, when you make a DApp they also make their cryptocurrency. So here, I\u2019ll show you how to search and add your token.","title":"Add/Search tokens"},{"location":"xinfinpay/features/#add-tokens","text":"From the main interface, go to top left menu icon beneath the Home button. Once you hit the menu, you\u2019ll be able to see this one slide: From what you can see above, your token shows up, under that is a supposed list for the other tokens. Since you only have the XinFin token, you can\u2019t notice the list. With that said, you can add a token, it\u2019s either you add your own made token from an ERC20 standard contract or you search someone\u2019s token assuming that you have one already. Let\u2019s go with adding your own first. On the Custom Token tab is where you can add your own created token. There are 3 input fields. The last two fill in by themselves once you fill in the Token Address input text field. So the first one is the only one needed. If you plan to make your token, you can try it on the Custom Token tab. Just hit Next and you\u2019re good to go. It is added to the list. If you choose one from the list, you can use it for your transactions related to that token. Now on to the searching of the token.","title":"Add tokens"},{"location":"xinfinpay/features/#search-tokens","text":"Same as before, if you go to the menu icon again, on the Search tab, you will see this interface: As seen above, XF is a known example of a crypto token. If in an instance, you have received XF tokens, then you can search and verify it from here, and add it to your token list.","title":"Search tokens"},{"location":"xinfinpay/features/#get-backup-seed","text":"If in case you forgot your secret backup phrase, you can get it from your settings, so go back to settings from the top-right menu button. When you get inside Settings, and if you scroll down in the middle you will find the Reveal Seed Words section. If you hit the Reveal Seed Words button, the secret backup phrase will be shown and you can copy it. Keep it safe! Questions? Join Telegram Channel to get answers: https://t.me/joinchat/GeOl40UaNJPlFLNwSvu9cQ","title":"Get backup seed"},{"location":"xinfinpay/features/#summary","text":"It\u2019s finished! That tutorial sure was a bit long but I\u2019m pretty sure that what you learned just now, will equip you enough for your future or current developments for making your decentralized XinFin applications. In case you forget some things you learned from here, you can always come back. It\u2019s natural if you don\u2019t remember everything in one go, every developer\u2019s been there. You\u2019ll get better soon enough! Even these non-blockchain related Microsoft developers are happy for you: Hope you learned a lot and good luck venturing deeper into blockchain. Until then, signing out, and stay tuned!","title":"Summary"},{"location":"xinfinrem/features/","text":"XinPay \u00b6","title":"Features"},{"location":"xinfinrem/features/#xinpay","text":"","title":"XinPay"}]}